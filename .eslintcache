[{"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/index.tsx":"1","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/serviceWorker.ts":"2","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/Store.ts":"3","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/App.tsx":"4","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/state/context.ts":"5","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/User.tsx":"6","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Authentication.tsx":"7","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/index.ts":"8","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/index.ts":"9","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Authentication.style.ts":"10","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/User.style.tsx":"11","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/campaignList/CampaignList.tsx":"12","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/settings/Settings.tsx":"13","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/Navbar.tsx":"14","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/sidebar/Sidebar.tsx":"15","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/AnalyticsOverview.tsx":"16","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Signin/Signin.tsx":"17","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/Advanced.tsx":"18","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/selection/Selection.tsx":"19","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/campaignList/lib/CampaignList.queries.ts":"20","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Signin/SignIn.style.ts":"21","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/campaignList/style/CampaignList.style.ts":"22","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/style/Navbar.style.ts":"23","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Text/Text.ts":"24","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/formElements/formElements.ts":"25","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Card/Card.ts":"26","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Button/Button.ts":"27","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/styles/AnalyticsOverview.style.ts":"28","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/lib/Popout.tsx":"29","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/lib/AnalyticsOverview.queries.ts":"30","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/section/Section.tsx":"31","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Table/TableComponent.tsx":"32","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/lib/AnalyticsOverview.library.tsx":"33","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/drawer/index.ts":"34","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/index.ts":"35","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaignList/index.ts":"36","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/advertiser/index.ts":"37","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/confirmationType/index.ts":"38","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/index.ts":"39","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/report/index.ts":"40","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativetype/index.ts":"41","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/index.ts":"42","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/invoice/index.ts":"43","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/geocode/index.ts":"44","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/index.ts":"45","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/index.ts":"46","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/user/index.ts":"47","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/snackbar/index.ts":"48","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/segment/index.ts":"49","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/index.ts":"50","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/index.ts":"51","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/snackbar/index.ts":"52","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/index.ts":"53","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/drawer/index.ts":"54","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeTypes/index.ts":"55","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/index.ts":"56","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/reports/index.ts":"57","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaignList/index.ts":"58","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/segments/index.ts":"59","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/index.ts":"60","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/geocodes/index.ts":"61","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/index.ts":"62","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/index.ts":"63","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/confirmationTypes/index.ts":"64","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/index.ts":"65","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/lib/Library.tsx":"66","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/advancedOrderSidebar/AdvancedOrderSidebar.tsx":"67","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/completionForm/CompletionForm.tsx":"68","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/ReviewForm.tsx":"69","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Table/Table.style.ts":"70","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/user/user.create.ts":"71","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/segment/segment.get.ts":"72","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/creativeset.get.ts":"73","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/creativeset.create.ts":"74","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/creativeset.update.ts":"75","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/user/user.get.ts":"76","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/creative.update.ts":"77","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/invoice/invoice.update.ts":"78","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/creative.create.ts":"79","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/geocode/geocode.get.ts":"80","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/invoice/invoice.get.ts":"81","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.signin.ts":"82","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.verify.ts":"83","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/creative.get.ts":"84","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.signup.ts":"85","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.resend.ts":"86","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativetype/creativetype.get.ts":"87","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/OutsideAlerter/OutSideAlerter.tsx":"88","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.interface.ts":"89","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/segments/segments.interface.ts":"90","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaignList/campaignList.interface.ts":"91","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/geocodes/geocodes.get.ts":"92","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/geocodes/geocodes.interface.ts":"93","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.interface.ts":"94","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/confirmationTypes/confirmationTypess.interface.ts":"95","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.interface.ts":"96","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.update.ts":"97","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/confirmationTypes/confirmationTypes.get.ts":"98","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.delete.ts":"99","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.create.ts":"100","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.get.ts":"101","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.interface.ts":"102","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.get.ts":"103","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.create.ts":"104","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/invoices.update.ts":"105","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/invoices.interface.ts":"106","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/invoices.get.ts":"107","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.update.ts":"108","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.create.ts":"109","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.get.ts":"110","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/segments/segments.get.ts":"111","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/reports/reports.interface.ts":"112","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaignList/campaignList.get.ts":"113","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/reports/reports.get.ts":"114","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/auth.signup.ts":"115","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/auth.signin.ts":"116","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/ReviewForm.style.ts":"117","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/library/ReviewForm.library.ts":"118","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/advancedOrderSidebar/styles/AdvancedOrderSidebar.style.ts":"119","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/lib/Queries.ts":"120","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/auth.interface.ts":"121","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeTypes/creativetypes.interface.ts":"122","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/modal/Modal.tsx":"123","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeTypes/creativetypes.get.ts":"124","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/drawer/drawer.ts":"125","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.interface.ts":"126","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.update.ts":"127","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.create.ts":"128","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.get.ts":"129","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/library/ReviewForm.queries.ts":"130","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/snackbar/snackbar.ts":"131","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.resend.ts":"132","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.update.ts":"133","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.verify.ts":"134","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.create.ts":"135","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/users.interface.ts":"136","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/users.getall.ts":"137","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.update.ts":"138","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.create.ts":"139","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.get.ts":"140","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/report/report.get.ts":"141","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/creativeinstance.delete.ts":"142","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/creativeinstance.get.ts":"143","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/creativeinstance.create.ts":"144","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/confirmationType/confirmationType.get.ts":"145","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/advertiser/advertiser.get.ts":"146","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/advertiser/advertiser.create.ts":"147","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaignList/campaignList.get.ts":"148","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/campaign.update.ts":"149","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/campaign.get.ts":"150","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/campaign.create.ts":"151","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/section/Section.style.ts":"152","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/sidebar/Sidebar.style.ts":"153","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/AdsForm.tsx":"154","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adSetsForm/AdSetsForm.tsx":"155","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/campaignForm/CampaignForm.tsx":"156","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/components/UserMenu/UserMenu.tsx":"157","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adSetsForm/AdSetsForm.style.ts":"158","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/campaignForm/CampaignForm.style.ts":"159","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/AdsForm.style.tsx":"160","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/lib/AdsForm.library.tsx":"161","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/radioButton/RadioButton.tsx":"162","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/creativePreview/OSNotificationCreativePreview/OSNotificationCreativePreview.tsx":"163","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/components/UserMenu/UserMenu.style.ts":"164","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/radioButton/RadioButton.style.ts":"165","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/lib/AdsForm.queries.tsx":"166"},{"size":688,"mtime":1567103304310,"results":"167","hashOfConfig":"168"},{"size":5198,"mtime":1568056402295,"results":"169","hashOfConfig":"168"},{"size":692,"mtime":1559232983630,"results":"170","hashOfConfig":"168"},{"size":2087,"mtime":1609894539910,"results":"171","hashOfConfig":"168"},{"size":183,"mtime":1608603194005,"results":"172","hashOfConfig":"168"},{"size":6275,"mtime":1608608251847,"results":"173","hashOfConfig":"168"},{"size":1476,"mtime":1608608192857,"results":"174","hashOfConfig":"168"},{"size":1182,"mtime":1566507959787,"results":"175","hashOfConfig":"168"},{"size":474,"mtime":1566507959767,"results":"176","hashOfConfig":"168"},{"size":1189,"mtime":1565756690933,"results":"177","hashOfConfig":"168"},{"size":2268,"mtime":1589086625778,"results":"178","hashOfConfig":"168"},{"size":4219,"mtime":1609373547955,"results":"179","hashOfConfig":"168"},{"size":1986,"mtime":1596087015907,"results":"180","hashOfConfig":"168"},{"size":5510,"mtime":1608608247959,"results":"181","hashOfConfig":"168"},{"size":2839,"mtime":1595300501060,"results":"182","hashOfConfig":"168"},{"size":18570,"mtime":1607910738023,"results":"183","hashOfConfig":"168"},{"size":6382,"mtime":1608608241201,"results":"184","hashOfConfig":"168"},{"size":5797,"mtime":1607891284860,"results":"185","hashOfConfig":"168"},{"size":5790,"mtime":1589086625816,"results":"186","hashOfConfig":"168"},{"size":343,"mtime":1595300501060,"results":"187","hashOfConfig":"168"},{"size":1969,"mtime":1595300501053,"results":"188","hashOfConfig":"168"},{"size":652,"mtime":1589086625000,"results":"189","hashOfConfig":"168"},{"size":2494,"mtime":1589167077346,"results":"190","hashOfConfig":"168"},{"size":4999,"mtime":1589086625758,"results":"191","hashOfConfig":"168"},{"size":3065,"mtime":1589086625764,"results":"192","hashOfConfig":"168"},{"size":245,"mtime":1567106830311,"results":"193","hashOfConfig":"168"},{"size":1543,"mtime":1565756690920,"results":"194","hashOfConfig":"168"},{"size":311,"mtime":1595300501059,"results":"195","hashOfConfig":"168"},{"size":4516,"mtime":1609890866911,"results":"196","hashOfConfig":"168"},{"size":533,"mtime":1605668319595,"results":"197","hashOfConfig":"168"},{"size":1500,"mtime":1607891284855,"results":"198","hashOfConfig":"168"},{"size":7219,"mtime":1589167069648,"results":"199","hashOfConfig":"168"},{"size":14233,"mtime":1607910738024,"results":"200","hashOfConfig":"168"},{"size":460,"mtime":1559232983666,"results":"201","hashOfConfig":"168"},{"size":1265,"mtime":1559232983663,"results":"202","hashOfConfig":"168"},{"size":815,"mtime":1566507959785,"results":"203","hashOfConfig":"168"},{"size":1020,"mtime":1565818590367,"results":"204","hashOfConfig":"168"},{"size":725,"mtime":1559232983664,"results":"205","hashOfConfig":"168"},{"size":1536,"mtime":1559232983665,"results":"206","hashOfConfig":"168"},{"size":631,"mtime":1559232983668,"results":"207","hashOfConfig":"168"},{"size":739,"mtime":1559232983666,"results":"208","hashOfConfig":"168"},{"size":1416,"mtime":1559232983662,"results":"209","hashOfConfig":"168"},{"size":868,"mtime":1559232983667,"results":"210","hashOfConfig":"168"},{"size":649,"mtime":1559232983667,"results":"211","hashOfConfig":"168"},{"size":1267,"mtime":1559232983665,"results":"212","hashOfConfig":"168"},{"size":1373,"mtime":1559232983666,"results":"213","hashOfConfig":"168"},{"size":1071,"mtime":1559232983669,"results":"214","hashOfConfig":"168"},{"size":453,"mtime":1559232983669,"results":"215","hashOfConfig":"168"},{"size":649,"mtime":1559232983668,"results":"216","hashOfConfig":"168"},{"size":144,"mtime":1559232983632,"results":"217","hashOfConfig":"168"},{"size":191,"mtime":1559232983638,"results":"218","hashOfConfig":"168"},{"size":28,"mtime":1559232983638,"results":"219","hashOfConfig":"168"},{"size":144,"mtime":1559232983635,"results":"220","hashOfConfig":"168"},{"size":26,"mtime":1559232983636,"results":"221","hashOfConfig":"168"},{"size":80,"mtime":1559232983633,"results":"222","hashOfConfig":"168"},{"size":96,"mtime":1559232983631,"results":"223","hashOfConfig":"168"},{"size":68,"mtime":1559232983637,"results":"224","hashOfConfig":"168"},{"size":76,"mtime":1566507959766,"results":"225","hashOfConfig":"168"},{"size":70,"mtime":1559232983637,"results":"226","hashOfConfig":"168"},{"size":152,"mtime":1559232983631,"results":"227","hashOfConfig":"168"},{"size":70,"mtime":1559232983636,"results":"228","hashOfConfig":"168"},{"size":105,"mtime":1559232983636,"results":"229","hashOfConfig":"168"},{"size":176,"mtime":1559232983634,"results":"230","hashOfConfig":"168"},{"size":89,"mtime":1559232983633,"results":"231","hashOfConfig":"168"},{"size":156,"mtime":1559232983635,"results":"232","hashOfConfig":"168"},{"size":21808,"mtime":1609349839841,"results":"233","hashOfConfig":"168"},{"size":8344,"mtime":1607891284864,"results":"234","hashOfConfig":"168"},{"size":3266,"mtime":1607891284866,"results":"235","hashOfConfig":"168"},{"size":36830,"mtime":1607910585851,"results":"236","hashOfConfig":"168"},{"size":3389,"mtime":1589167069647,"results":"237","hashOfConfig":"168"},{"size":631,"mtime":1559232983669,"results":"238","hashOfConfig":"168"},{"size":615,"mtime":1559232983668,"results":"239","hashOfConfig":"168"},{"size":679,"mtime":1559232983666,"results":"240","hashOfConfig":"168"},{"size":756,"mtime":1559232983665,"results":"241","hashOfConfig":"168"},{"size":902,"mtime":1559232983666,"results":"242","hashOfConfig":"168"},{"size":581,"mtime":1559232983669,"results":"243","hashOfConfig":"168"},{"size":849,"mtime":1559232983664,"results":"244","hashOfConfig":"168"},{"size":830,"mtime":1559232983668,"results":"245","hashOfConfig":"168"},{"size":705,"mtime":1559232983664,"results":"246","hashOfConfig":"168"},{"size":615,"mtime":1559232983667,"results":"247","hashOfConfig":"168"},{"size":617,"mtime":1559232983667,"results":"248","hashOfConfig":"168"},{"size":1366,"mtime":1603766560716,"results":"249","hashOfConfig":"168"},{"size":572,"mtime":1559232983662,"results":"250","hashOfConfig":"168"},{"size":633,"mtime":1559232983664,"results":"251","hashOfConfig":"168"},{"size":987,"mtime":1559232983662,"results":"252","hashOfConfig":"168"},{"size":468,"mtime":1559232983662,"results":"253","hashOfConfig":"168"},{"size":695,"mtime":1559232983666,"results":"254","hashOfConfig":"168"},{"size":1185,"mtime":1609894845188,"results":"255","hashOfConfig":"168"},{"size":542,"mtime":1565756690903,"results":"256","hashOfConfig":"168"},{"size":177,"mtime":1559232983638,"results":"257","hashOfConfig":"168"},{"size":137,"mtime":1566507959766,"results":"258","hashOfConfig":"168"},{"size":1492,"mtime":1559232983636,"results":"259","hashOfConfig":"168"},{"size":195,"mtime":1559232983636,"results":"260","hashOfConfig":"168"},{"size":661,"mtime":1559232983631,"results":"261","hashOfConfig":"168"},{"size":212,"mtime":1559232983633,"results":"262","hashOfConfig":"168"},{"size":500,"mtime":1559232983635,"results":"263","hashOfConfig":"168"},{"size":1952,"mtime":1559232983635,"results":"264","hashOfConfig":"168"},{"size":1800,"mtime":1559232983632,"results":"265","hashOfConfig":"168"},{"size":2053,"mtime":1559232983633,"results":"266","hashOfConfig":"168"},{"size":1973,"mtime":1559232983635,"results":"267","hashOfConfig":"168"},{"size":1925,"mtime":1559232983634,"results":"268","hashOfConfig":"168"},{"size":403,"mtime":1559232983634,"results":"269","hashOfConfig":"168"},{"size":1750,"mtime":1559232983635,"results":"270","hashOfConfig":"168"},{"size":2090,"mtime":1559232983633,"results":"271","hashOfConfig":"168"},{"size":1760,"mtime":1559232983637,"results":"272","hashOfConfig":"168"},{"size":462,"mtime":1559232983637,"results":"273","hashOfConfig":"168"},{"size":1611,"mtime":1559232983637,"results":"274","hashOfConfig":"168"},{"size":1957,"mtime":1565806364584,"results":"275","hashOfConfig":"168"},{"size":1940,"mtime":1559232983630,"results":"276","hashOfConfig":"168"},{"size":1762,"mtime":1559232983630,"results":"277","hashOfConfig":"168"},{"size":1556,"mtime":1559232983638,"results":"278","hashOfConfig":"168"},{"size":353,"mtime":1559232983637,"results":"279","hashOfConfig":"168"},{"size":1943,"mtime":1566507959765,"results":"280","hashOfConfig":"168"},{"size":1565,"mtime":1565756690905,"results":"281","hashOfConfig":"168"},{"size":1434,"mtime":1559232983631,"results":"282","hashOfConfig":"168"},{"size":2057,"mtime":1595300501048,"results":"283","hashOfConfig":"168"},{"size":2448,"mtime":1589086625811,"results":"284","hashOfConfig":"168"},{"size":12168,"mtime":1608227949771,"results":"285","hashOfConfig":"168"},{"size":1823,"mtime":1589086625798,"results":"286","hashOfConfig":"168"},{"size":1437,"mtime":1608056131869,"results":"287","hashOfConfig":"168"},{"size":591,"mtime":1595300501048,"results":"288","hashOfConfig":"168"},{"size":251,"mtime":1559232983633,"results":"289","hashOfConfig":"168"},{"size":1144,"mtime":1589086625766,"results":"290","hashOfConfig":"168"},{"size":1697,"mtime":1559232983633,"results":"291","hashOfConfig":"168"},{"size":381,"mtime":1559232983636,"results":"292","hashOfConfig":"168"},{"size":530,"mtime":1559232983634,"results":"293","hashOfConfig":"168"},{"size":1793,"mtime":1559232983635,"results":"294","hashOfConfig":"168"},{"size":1884,"mtime":1559232983634,"results":"295","hashOfConfig":"168"},{"size":1717,"mtime":1559232983634,"results":"296","hashOfConfig":"168"},{"size":5009,"mtime":1608055472967,"results":"297","hashOfConfig":"168"},{"size":269,"mtime":1559232983638,"results":"298","hashOfConfig":"168"},{"size":1715,"mtime":1559232983638,"results":"299","hashOfConfig":"168"},{"size":1642,"mtime":1559232983639,"results":"300","hashOfConfig":"168"},{"size":1709,"mtime":1559232983639,"results":"301","hashOfConfig":"168"},{"size":1635,"mtime":1559232983638,"results":"302","hashOfConfig":"168"},{"size":243,"mtime":1559232983639,"results":"303","hashOfConfig":"168"},{"size":1536,"mtime":1559232983639,"results":"304","hashOfConfig":"168"},{"size":1874,"mtime":1559232983632,"results":"305","hashOfConfig":"168"},{"size":1862,"mtime":1559232983632,"results":"306","hashOfConfig":"168"},{"size":2698,"mtime":1566507959767,"results":"307","hashOfConfig":"168"},{"size":836,"mtime":1559232983668,"results":"308","hashOfConfig":"168"},{"size":927,"mtime":1566507959786,"results":"309","hashOfConfig":"168"},{"size":761,"mtime":1559232983665,"results":"310","hashOfConfig":"168"},{"size":842,"mtime":1559232983665,"results":"311","hashOfConfig":"168"},{"size":759,"mtime":1559232983664,"results":"312","hashOfConfig":"168"},{"size":670,"mtime":1559232983661,"results":"313","hashOfConfig":"168"},{"size":739,"mtime":1559232983661,"results":"314","hashOfConfig":"168"},{"size":793,"mtime":1566507959785,"results":"315","hashOfConfig":"168"},{"size":842,"mtime":1559232983663,"results":"316","hashOfConfig":"168"},{"size":632,"mtime":1566507959784,"results":"317","hashOfConfig":"168"},{"size":705,"mtime":1559232983662,"results":"318","hashOfConfig":"168"},{"size":565,"mtime":1589086625000,"results":"319","hashOfConfig":"168"},{"size":1354,"mtime":1589086625000,"results":"320","hashOfConfig":"168"},{"size":32674,"mtime":1607903872092,"results":"321","hashOfConfig":"168"},{"size":24365,"mtime":1607904752026,"results":"322","hashOfConfig":"168"},{"size":38211,"mtime":1607907056583,"results":"323","hashOfConfig":"168"},{"size":729,"mtime":1595300607471,"results":"324","hashOfConfig":"168"},{"size":2383,"mtime":1589086625792,"results":"325","hashOfConfig":"168"},{"size":2819,"mtime":1589086625798,"results":"326","hashOfConfig":"168"},{"size":2948,"mtime":1589086625793,"results":"327","hashOfConfig":"168"},{"size":827,"mtime":1589086625000,"results":"328","hashOfConfig":"168"},{"size":611,"mtime":1589086625000,"results":"329","hashOfConfig":"168"},{"size":8279,"mtime":1589086625761,"results":"330","hashOfConfig":"168"},{"size":701,"mtime":1595300607470,"results":"331","hashOfConfig":"168"},{"size":530,"mtime":1589086625000,"results":"332","hashOfConfig":"168"},{"size":459,"mtime":1589086625000,"results":"333","hashOfConfig":"168"},{"filePath":"334","messages":"335","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"337"},"kc9wir",{"filePath":"338","messages":"339","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"337"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"347","messages":"348","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"337"},{"filePath":"350","messages":"351","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"337"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"357","messages":"358","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"337"},{"filePath":"360","messages":"361","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"337"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"365","messages":"366","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"337"},{"filePath":"368","messages":"369","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"337"},{"filePath":"371","messages":"372","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"337"},{"filePath":"374","messages":"375","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"337"},{"filePath":"377","messages":"378","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"337"},{"filePath":"380","messages":"381","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"337"},{"filePath":"383","messages":"384","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"337"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"388","messages":"389","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"337"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"393","messages":"394","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"337"},{"filePath":"396","messages":"397","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"337"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"415","messages":"416","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"337"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"482","messages":"483","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"337"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"493","messages":"494","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"337"},{"filePath":"496","messages":"497","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"337"},{"filePath":"499","messages":"500","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"337"},{"filePath":"502","messages":"503","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"337"},{"filePath":"505","messages":"506","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"337"},{"filePath":"508","messages":"509","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"337"},{"filePath":"511","messages":"512","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"337"},{"filePath":"514","messages":"515","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"337"},{"filePath":"517","messages":"518","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"337"},{"filePath":"520","messages":"521","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"337"},{"filePath":"523","messages":"524","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"337"},{"filePath":"526","messages":"527","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"337"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"531","messages":"532","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"337"},{"filePath":"534","messages":"535","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"337"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"539","messages":"540","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"337"},{"filePath":"542","messages":"543","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"602","messages":"603","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"337"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"649","messages":"650","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"337"},{"filePath":"652","messages":"653","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"337"},{"filePath":"655","messages":"656","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"337"},{"filePath":"658","messages":"659","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"337"},{"filePath":"661","messages":"662","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"337"},{"filePath":"664","messages":"665","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"337"},{"filePath":"667","messages":"668","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"337"},{"filePath":"670","messages":"671","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"337"},{"filePath":"673","messages":"674","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"337"},{"filePath":"676","messages":"677","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"337"},{"filePath":"679","messages":"680","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"337"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"692","messages":"693","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"337"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/index.tsx",["713"],"import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as serviceWorker from './serviceWorker';\n\n\nimport App from \"./App\";\n\nimport configureStore from \"./Store\";\n\nimport \"./index.css\";\n\nconst { persistor, store } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement,\n);\n\nserviceWorker.unregister();\n",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/serviceWorker.ts",["714"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/Store.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/App.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/state/context.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/User.tsx",["715"],"import {\n    withStyles\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { CloseDrawer } from \"../actions\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Selection from \"./views/adsManager/views/selection/Selection\";\nimport Advanced from \"./views/adsManager/views/advanced/Advanced\";\n\nimport Sidebar from \"./components/sidebar/Sidebar\";\n\nimport * as S from \"./User.style\";\nimport { styles } from \"./User.style\";\n\nimport Context from \"../state/context\";\nimport CampaignList from \"./campaignList/CampaignList\";\n\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport AnalyticsOverview from \"./analytics/analyticsOverview/AnalyticsOverview\";\nimport Settings from \"./settings/Settings\";\n\nclass User extends React.Component<any, any> {\n    static contextType = Context;\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeAdvertiser: _.find(props.advertisers, { state: \"active\" })\n        }\n        this.setActiveAdvertiser = this.setActiveAdvertiser.bind(this);\n    }\n\n    setActiveAdvertiser = (activeAdvertiser) => {\n        this.setState({ activeAdvertiser });\n    }\n\n    public render(): any {\n\n        const { advertisers, auth, classes, match } = this.props;\n        const activeAdvertiser = _.find(advertisers, { state: \"active\" });\n\n\n\n        const httpLink = createHttpLink({\n            uri: `${process.env.REACT_APP_SERVER_ADDRESS}`.replace(\"v1\", \"graphql\"),\n        });\n\n        const authLink = setContext((_, { headers }) => {\n            // get the authentication token from local storage if it exists\n            // return the headers to the context so httpLink can read them\n            return {\n                headers: {\n                    ...headers,\n                    authorization: `Bearer ${auth.accessToken}`,\n                }\n            }\n        });\n\n        const client = new ApolloClient({\n            link: authLink.concat(httpLink),\n            cache: new InMemoryCache()\n        });\n\n        if (\n            !auth ||\n            !auth.signedIn ||\n            !auth.emailVerified ||\n            (auth.role !== \"user\" && !activeAdvertiser)\n        ) {\n            return <Redirect to=\"/a\" />;\n        }\n\n\n\n        return (\n            <ApolloProvider client={client}>\n                <S.Container>\n\n                    <Navbar userId={auth.id} advertiserId={activeAdvertiser.id} />\n                    <S.Content>\n\n                        {\n                            this.context.sidebar === \"visible\" &&\n                            <Sidebar match={match} />\n                        }\n                        {\n                            this.context.sidebar === \"hidden\" &&\n                            // placeholder to keep layout normal, todo - cleanup\n                            <div style={{\n                                position: \"sticky\",\n                                visibility: \"hidden\",\n                                marginTop: \"64px\",\n                                top: \"64px\",\n                                opacity: 0,\n                                height: \"calc(100vh - 64px)\",\n                                width: \"255px\",\n                                borderRight: \"2px solid #f6f6f5\"\n                            }} />\n                        }\n                        <S.Main>\n                            <Switch>\n                                {/* /adsmanager */}\n                                <Route exact path={match.url + \"/adsmanager/selection\"} component={Selection} />\n                                <Route exact path={match.url + \"/adsmanager/advanced\"} component={Advanced} />\n\n                                {/* /settings */}\n                                <Route exact path={match.url + \"/settings\"} render={(props) => <Settings {...props} userId={auth.id} advertisers={advertisers} activeAdvertiser={this.state.activeAdvertiser} setActiveAdvertiser={this.setActiveAdvertiser} />} />\n\n                                {/* /campaigns */}\n                                <Route exact path={match.url + \"/campaigns\"} render={(props) => <CampaignList {...props} userId={auth.id} advertiserId={this.state.activeAdvertiser.id} />} />\n\n                                {/* /campaigns/:campaignId/analytics - */}\n                                <Route exact path={match.url + \"/campaign/:campaignId/analytics/overview\"} render={(props) => <AnalyticsOverview {...props} auth={auth} userId={auth.id} advertiserId={this.state.activeAdvertiser.id} />} />\n                                <Route exact path={match.url + \"/campaign/:campaignId/analytics/audiences\"} render={(props) => <CampaignList {...props} userId={auth.id} advertiserId={this.state.activeAdvertiser.id} />} />\n                                <Route exact path={match.url + \"/campaign/:campaignId/analytics/locations\"} render={(props) => <CampaignList {...props} userId={auth.id} advertiserId={this.state.activeAdvertiser.id} />} />\n                                <Route exact path={match.url + \"/campaign/:campaignId/analytics/platforms\"} render={(props) => <CampaignList {...props} userId={auth.id} advertiserId={this.state.activeAdvertiser.id} />} />\n\n                                {/* default */}\n                                <Redirect to={match.url + \"/campaigns\"} />\n                            </Switch>\n                        </S.Main>\n                    </S.Content>\n                </S.Container>\n            </ApolloProvider>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n    advertisers: state.advertiserReducer.advertisers,\n    auth: state.authReducer,\n    drawer: state.drawerReducer\n});\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => ({\n    CloseDrawer: () => dispatch(CloseDrawer({})),\n    Signout: () => dispatch(CloseDrawer({}))\n});\n\nexport default withStyles(styles, { withTheme: true })(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(User)\n);\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Authentication.tsx",["716"],"import { Paper, withStyles } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { styles } from \"./Authentication.style\";\nimport * as S from \"./Authentication.style\";\n\nimport SigninContainer from \"./Signin/Signin\";\n\nclass Authentication extends React.Component<any, any> {\n  public state = {\n    tabValue: \"SignIn\"\n  };\n\n  public render() {\n    const { classes } = this.props;\n    return (\n      <S.Container>\n        <S.Content>\n          <Switch>\n            <Route path=\"/auth/signin\" component={SigninContainer} />\n            {this.getRedirect()}\n          </Switch>\n        </S.Content>\n      </S.Container>\n    );\n  }\n\n  private getRedirect() {\n    const { advertisers, auth } = this.props;\n    if (auth && auth.signedIn) {\n      if (!auth.emailVerified) {\n        return <Redirect to=\"/auth/verify\" />;\n      } else {\n        const activeAdvertiser = _.find(advertisers, { state: \"active\" });\n        if (!activeAdvertiser) {\n          return <Redirect to=\"/auth/wait\" />;\n        } else {\n          return <Redirect to=\"/a\" />;\n        }\n      }\n    } else {\n      return <Redirect to=\"/auth/signin\" />;\n    }\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  advertisers: state.advertiserReducer.advertisers,\n  auth: state.authReducer\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(Authentication));","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Authentication.style.ts",["717"],"import styled from \"styled-components\";\n\nenum Breakpoint {\n  xs = \"576px\",\n  sm = \"768px\",\n  md = \"992px\",\n  lg = \"1200px\"\n}\n\nexport const Container = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: radial-gradient(\n    ellipse 100% 100% at 0% 0%,\n    rgb(57, 45, 209, 0.8) 0%,\n    rgb(255, 67, 67, 0.8) 100%\n  );\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Content = styled(\"div\")`\n  height: 520px;\n  margin: 28px;\n\n  @media (max-width: ${Breakpoint.xs}) {\n    max-width: 550px;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    max-width: 550px;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    max-width: 550px;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    width: 750px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    width: 750px;\n  }\n`;\n\nexport const styles: any = {\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"300px\",\n    minWidth: \"300px\"\n  },\n  root: {\n    alignItems: \"center\",\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"center\"\n  },\n  tabContent: {\n    flex: 1\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/User.style.tsx",["718"],"import styled from \"styled-components\";\n\nenum Breakpoint {\n  xs = \"576px\",\n  sm = \"768px\",\n  md = \"992px\",\n  lg = \"1200px\"\n}\n\nexport const Container = styled(\"div\")`\n  height: 100%;\n  background-color: white;\n`;\nexport const Content = styled(\"div\")`\n  display: flex;\n  background-color: white;\n`;\nexport const Main = styled(\"div\")`\n  padding: 24px;\n  height: 100%;\n  overflow: scroll;\n  margin-top: 64px;\n\n  @media (max-width: ${Breakpoint.xs}) {\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    width: 576px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    width: 768px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    width: 992px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\n\n\nconst drawerWidth = 240;\n\nexport const styles = (theme: any) =>\n  ({\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\"\n    },\n    docked: {\n      height: \"100%\"\n    },\n    drawerPaper: {\n      height: \"100%\",\n      position: \"relative\",\n      transition: theme.transitions.create(\"width\", {\n        duration: theme.transitions.duration.enteringScreen,\n        easing: theme.transitions.easing.sharp\n      }),\n      width: drawerWidth\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        duration: theme.transitions.duration.leavingScreen,\n        easing: theme.transitions.easing.sharp\n      }),\n      width: theme.spacing.unit * 7,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing.unit * 9\n      }\n    },\n    link: {\n      textDecoration: \"none\"\n    },\n    root: {\n      display: \"flex\",\n      flexGrow: 1,\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"relative\",\n      zIndex: 1\n    },\n    toolbar: {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar\n    }\n  } as any);\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/campaignList/CampaignList.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/settings/Settings.tsx",["719"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport Section from \"../../components/section/Section\";\nimport { Text } from \"../../components/Text/Text\";\nimport { InputContainer } from \"../../components/formElements/formElements\";\nimport Select from 'react-select';\nimport _ from \"lodash\";\n\nconst Settings = props => {\n\n\n    const customStyles = {\n        control: (provided, state) => ({\n            ...provided,\n            backgroundColor: \"#fafafa\"\n        }),\n    }\n\n    const setActiveAdvertiser = (e) => {\n        props.setActiveAdvertiser(_.find(props.advertisers, { id: e.value }))\n    }\n\n    const advertisers = () => {\n        let advertisers = [] as any;\n        props.advertisers.forEach((advertiser) => {\n            advertisers.push({\n                value: advertiser.id,\n                label: advertiser.name\n            })\n        });\n        return advertisers;\n    }\n\n    return (\n        <div>\n            <Text content=\"Account Settings\" fontFamily=\"Poppins\" sizes={[22, 22, 22, 22, 22]}></Text>\n            <div style={{ marginTop: \"48px\", marginBottom: \"48px\" }}></div>\n            <Text content=\"Organization\" fontFamily=\"Poppins\" sizes={[22, 22, 22, 22, 18]}></Text>\n            <div style={{ marginBottom: \"28px\" }}></div>\n\n            <div style={{ height: \"400px\" }}>\n                <InputContainer>\n                    <div style={{ display: \"flex\", marginBottom: \"4px\" }}>\n                        <Text content={\"Select organization\"} sizes={[16, 16, 15, 15, 13]} fontFamily={\"Poppins\"} />\n                    </div>\n                    <Select\n                        styles={customStyles}\n                        onChange={setActiveAdvertiser}\n                        value={{ value: props.activeAdvertiser.id, label: props.activeAdvertiser.name }}\n                        options={advertisers()}\n                    />\n\n                </InputContainer>\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default Settings;\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/Navbar.tsx",["720"],"import { Icon, IconButton, withStyles } from \"@material-ui/core\";\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as S from \"./style/Navbar.style\";\n\nimport { Link, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport UserMenu from \"./components/UserMenu/UserMenu\";\n\nimport { SignOut, ToggleDrawer, UserResend } from \"../../../actions\";\n\nimport BraveAdsLogo from \"../../../assets/images/Subdomains_Rewards_Ads_Default.png\";\n\nimport { styles } from \"./style/Navbar.style\";\nimport OutsideAlerter from \"../../../components/OutsideAlerter/OutSideAlerter\";\nimport TopBarProgress from \"react-topbar-progress-indicator\";\nimport { Text } from \"../../../components/Text/Text\";\nimport \"./style/Navbar.style.css\"\n\nimport Context from \"../../../state/context\";\n\nlet iconStyle = { cursor: \"pointer\", color: \"#ff7654\", fontSize: \"28px\" };\nconst linkStyle = { textDecoration: \"none\", color: \"inherit\" };\nconst logoStyle = { textDecoration: \"none\", color: \"inherit\", marginTop: \"3px\" };\n\nTopBarProgress.config({\n    barColors: {\n        \"0\": \"#FB7959\"\n    },\n    shadowBlur: 0,\n    shadowColor: undefined,\n    barThickness: 2,\n});\n\nclass Navbar extends React.Component<any, any> {\n    static contextType = Context;\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuOpen: false\n        };\n    }\n\n    public toggleMenu = () => {\n        this.setState(prevState => ({\n            menuOpen: !prevState.menuOpen\n        }));\n    };\n\n    public closeMenu = () => {\n        this.setState({\n            menuOpen: false\n        });\n    };\n\n    public render() {\n        const { classes, toggleDrawer, open, signOut, match } = this.props;\n        return (\n            <div style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 9001 }}>\n                <S.Container loading={this.context.loading}>\n                    {this.context.loading && <TopBarProgress />}\n                    <S.SubContainer>\n                        <Link style={logoStyle} to={\"/home\"}>\n                            <S.Logo src={BraveAdsLogo} />\n                        </Link>\n                    </S.SubContainer>\n\n\n                    {/* <S.SubContainer>\n                        <S.SearchContainer>\n                            <Icon\n                                style={{ color: \"#393A46\", marginLeft: \"8px\", opacity: 0.5 }}\n                            >\n                                search\n                            </Icon>\n\n                            <S.SearchInput type=\"text\" placeholder=\"Search\" name=\"name\" />\n                        </S.SearchContainer>\n                    </S.SubContainer> */}\n                    <S.SubContainer\n                        style={{ justifyContent: \"space-between\", width: \"450px\" }}\n                    >\n                        <S.SubContainer>\n                            <Link style={linkStyle} to={`/user/main/adsmanager/selection?userId=${this.props.userId}&advertiserId=${this.props.advertiserId}`}>\n                                <div style={{ padding: \"0px 20px\", background: \"#4C54D2\", color: \"white\", border: \"none\", borderRadius: \"100px 100px 100px 100px\" }}>\n                                    <span>\n                                        <Text style={{ paddingTop: \"6px\", paddingBottom: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontWeight={500} fontFamily={\"Poppins\"}>\n                                            New Campaign\n                                    </Text>\n                                    </span>\n                                </div>\n                            </Link>\n                        </S.SubContainer>\n                        <S.SubContainer>\n                            <div style={{ width: \"1px\", height: \"20px\", borderLeft: \"2px solid #EDEDED\" }}></div>\n                        </S.SubContainer>\n                        <S.SubContainer>\n                            <Text style={{ marginTop: \"6px\", marginBottom: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontFamily={\"Poppins\"}>\n                                Help Center\n                            </Text>\n                        </S.SubContainer>\n                        <S.SubContainer>\n                            <Text style={{ marginTop: \"6px\", marginBottom: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontFamily={\"Poppins\"}>\n                                Messages\n                                    </Text>\n                        </S.SubContainer>\n                        <OutsideAlerter onOutsideClick={this.closeMenu}>\n                            <S.SubContainer style={{ position: \"relative\" }}>\n                                <Text onClick={this.toggleMenu} content={\"Account\"} style={{ marginTop: \"6px\", marginBottom: \"6px\", cursor: \"pointer\" }} sizes={[16, 16, 15, 15, 14]} fontFamily={\"Poppins\"} />\n                                <UserMenu menuOpen={this.state.menuOpen} signOut={signOut} />\n                            </S.SubContainer>\n                        </OutsideAlerter>\n                    </S.SubContainer>\n                </S.Container>\n                {/* <BottomNav /> */}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n    open: state.drawerReducer.open\n});\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => ({\n    signOut: () => dispatch(SignOut()),\n    toggleDrawer: () => dispatch(ToggleDrawer())\n});\n\nexport default withStyles(styles, { withTheme: true })(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Navbar)\n);","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/sidebar/Sidebar.tsx",["721"],"import * as React from \"react\";\nimport { Link, Redirect, Route, Switch } from \"react-router-dom\";\nimport * as S from \"./Sidebar.style\";\nimport BATLogo from \"../../assets/images/basic-attention-token-logo.png\";\n\nimport {\n  Icon,\n  IconButton,\n  TableCell,\n  TableRow,\n  withStyles\n} from \"@material-ui/core\";\nimport { H6, H5, Text } from \"../../../components/Text/Text\";\n\nconst linkStyle = { textDecoration: \"none\", color: \"inherit\" };\n\nclass Sidebar extends React.Component<any, any> {\n  public render() {\n    return (\n      <S.Container>\n        <React.Fragment>{renderNav(this.props)}</React.Fragment>\n        {/* <S.BATContainer>\n          <img style={{ height: \"45px\" }} src={BATLogo} />\n        </S.BATContainer> */}\n      </S.Container>\n    );\n  }\n}\n\nfunction renderNav(props) {\n  return (\n    <div>\n      {/* <S.Nav selected={true}>\n            <S.SubContainer>\n              <Icon>dashboard</Icon>\n            </S.SubContainer>\n            <H5 fontFamily={\"Poppins\"}>Dashboard</H5>\n          </S.Nav>\n          <S.Nav selected={false}>\n            <S.SubContainer>\n              <Icon>note</Icon>\n            </S.SubContainer>\n            <H5 fontFamily={\"Poppins\"}>Creatives</H5>\n          </S.Nav>\n          <S.Nav selected={false}>\n            <S.SubContainer>\n              <Icon>apps</Icon>\n            </S.SubContainer>\n            <H5 fontFamily={\"Poppins\"}>Campaigns</H5>\n          </S.Nav> */}\n      {/* <Link style={linkStyle} to={props.match.url + \"/performances\"}>\n        <S.Nav\n          selected={window.location.pathname.includes(\n            props.match.url + \"/performances\"\n          )}\n        >\n          <S.SubContainer>\n            <Icon>bar_chart</Icon>\n          </S.SubContainer>\n          <Text sizes={[16, 16, 15, 15, 15]} fontFamily={\"Poppins\"}>\n            Performance\n              </Text>\n        </S.Nav>\n      </Link> */}\n      <Link style={linkStyle} to={props.match.url + \"/campaigns\"}>\n        <S.Nav\n          selected={window.location.pathname.includes(\n            props.match.url + \"/campaigns\"\n          ) || window.location.pathname.includes(\n            props.match.url + \"/campaign\"\n          )}\n        >\n          <S.SubContainer>\n            <Icon>apps</Icon>\n          </S.SubContainer>\n          <Text sizes={[16, 16, 15, 15, 15]} fontFamily={\"Poppins\"}>\n            Campaigns\n              </Text>\n        </S.Nav>\n      </Link>\n\n      {/* <S.Nav selected={false}>\n            <S.SubContainer>\n              <Icon>email</Icon>\n            </S.SubContainer>\n            <H5 fontFamily={\"Poppins\"}>Invoices</H5>\n          </S.Nav>\n          <S.Nav selected={false}>\n            <S.SubContainer>\n              <Icon>settings</Icon>\n            </S.SubContainer>\n            <H5 fontFamily={\"Poppins\"}>Preferences</H5>\n          </S.Nav> */}\n    </div>\n  );\n}\n\nexport default Sidebar;","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/AnalyticsOverview.tsx",["722"],"import React, { useContext, useEffect, useState, useRef, useMemo } from \"react\";\n\nimport * as _ from \"lodash\";\n\nimport Section from \"../../../components/section/Section\";\n\nimport { Text } from \"../../../components/Text/Text\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from 'highcharts-react-official'\nimport HighchartsSankey from \"highcharts/modules/sankey\";\nimport highcharts3d from 'highcharts/highcharts-3d'\n\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ANALYTICS_OVERVIEW } from \"./lib/AnalyticsOverview.queries\";\nimport TabSelector from \"../../../components/tabSelector/TabSelector\";\nimport { downloadCSV, processData, prepareChart, prepareSankey, formatMetric, tempMetric, budgetMetric } from \"./lib/AnalyticsOverview.library\";\nimport PopoutExample from \"./lib/Popout\";\n\nimport * as S from \"./styles/AnalyticsOverview.style\";\nimport { Input, InputContainer } from \"../../../components/formElements/formElements\";\nimport moment from \"moment\";\n\nHighchartsSankey(Highcharts);\nhighcharts3d(Highcharts);\n\nHighcharts.setOptions({\n    lang: {\n        thousandsSep: ','\n    }\n});\n\nconst AnalyticsOverview = props => {\n\n    const { auth, match } = props;\n\n    const tabConfig = [\n        { label: \"Overview\", selected: true, link: match.url }\n    ]\n\n    const [metric1, setMetric1] = useState(\"impressions\");\n    const [metric2, setMetric2] = useState(\"clicks\");\n    const [metric3, setMetric3] = useState(\"dismissals\");\n    const [metric4, setMetric4] = useState(\"landings\");\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState(moment().utc().endOf('day').format('YYYY-MM-DD[T]HH:mm'));\n    const [grouping, setGrouping] = useState(\"daily\")\n    const [downloadingCSV, setDownloadingCSV] = useState(false);\n\n    const initializeStartDate = data => {\n        setStartDate(moment(data.campaign.startAt).utc().startOf('day').format('YYYY-MM-DD[T]HH:mm'));\n    }\n\n    const { loading, error, data } = useQuery(ANALYTICS_OVERVIEW, {\n        variables: { id: match.params.campaignId },\n        onCompleted: initializeStartDate,\n    });\n\n    const handleCallback = (start, end, label) => {\n        setStartDate(moment(start).startOf(\"day\").format('YYYY-MM-DD[T]HH:mm'));\n        setEndDate(moment(end).endOf(\"day\").format('YYYY-MM-DD[T]HH:mm'));\n    }\n\n    let campaign;\n    let processedData;\n    let options;\n    let options2;\n    let dailyBudget;\n    let budget;\n    let spend;\n    let currency;\n    let state;\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    if (data) {\n        campaign = data.campaign;\n        dailyBudget = campaign.dailyBudget.toLocaleString();\n        budget = campaign.budget.toLocaleString();\n        spend = campaign.spent.toLocaleString();\n        currency = campaign.currency.toUpperCase();\n        state = capitalizeFirstLetter(campaign.state);\n        let engagements = campaign.engagements;\n        let filteredEngagements = [] as any;\n        if (engagements) {\n            engagements.forEach((engagement) => {\n                if (moment(engagement.createdat) >= moment.utc(startDate) && moment(engagement.createdat) <= moment.utc(endDate)) {\n                    filteredEngagements.push(engagement);\n                }\n            });\n        }\n\n        processedData = processData(filteredEngagements, metric1, metric2, metric3, metric4, grouping);\n        options = prepareChart(metric1, processedData.metric1DataSet, metric2, processedData.metric2DataSet, metric3, processedData.metric3DataSet, metric4, processedData.metric4DataSet);\n        options2 = prepareSankey(processedData.impressions, processedData.clicks, processedData.landings, processedData.conversions);\n    }\n\n    if (loading) return <></>;\n    return (\n        <div>\n            {campaign.type !== \"fixed\" &&\n                <div>\n\n                    <div style={{ width: \"100%\", display: \"flex\", alignItems: \"center\", marginBottom: \"28px\" }}>\n                        <Text content={campaign.name} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 22]} />\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginLeft: \"auto\" }}>\n\n                            {\n                                startDate !== '' &&\n                                <DateRangePicker\n                                    initialSettings={{ startDate: moment(startDate).format(\"MM/DD/YYYY\"), endDate: moment(endDate).format(\"MM/DD/YYYY\") }}\n                                    onCallback={handleCallback}\n                                >\n                                    <div style={{ padding: \"0px 20px\", background: \"#fafafa\", color: \"black\", border: \"1px solid #e2e2e2\", borderRadius: \"100px 100px 100px 100px\", marginLeft: \"auto\", cursor: \"pointer\", minWidth: \"165px\", display: \"flex\", justifyContent: \"center\", marginRight: \"14px\" }}>\n                                        <span>\n                                            <Text content={`${moment(startDate).format(\"MM/DD/YYYY\")} - ${moment(endDate).format(\"MM/DD/YYYY\")}`} style={{ paddingTop: \"6px\", paddingBottom: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontWeight={500} fontFamily={\"Poppins\"} />\n                                        </span>\n                                    </div>\n                                </DateRangePicker>\n                            }\n\n                            {\n                                downloadingCSV ?\n                                    <div style={{ padding: \"0px 20px\", background: \"#FB7959\", color: \"white\", border: \"none\", borderRadius: \"100px 100px 100px 100px\", marginLeft: \"auto\", minWidth: \"165px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        <span>\n                                            <Text content={\"Downloading...\"} style={{ paddingTop: \"6px\", paddingBottom: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontWeight={500} fontFamily={\"Poppins\"} />\n                                        </span>\n                                    </div> :\n                                    <div onClick={() => downloadCSV(campaign.id, campaign.name, auth.accessToken, auth.id, setDownloadingCSV)} style={{ padding: \"0px 20px\", background: \"#FB7959\", color: \"white\", border: \"none\", borderRadius: \"100px 100px 100px 100px\", marginLeft: \"auto\", cursor: \"pointer\", minWidth: \"165px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        <span>\n                                            <Text content={\"Download Report\"} style={{ paddingTop: \"6px\", paddingBottom: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontWeight={500} fontFamily={\"Poppins\"} />\n                                        </span>\n                                    </div>\n                            }\n                        </div>\n                    </div>\n\n                    <div style={{ display: \"flex\" }}>\n\n                        {/* Left Side (Metrics + Chart) */}\n                        <div style={{ width: \"75%\" }}>\n                            <div style={{ display: \"flex\", marginBottom: \"28px\", marginTop: \"14px\" }}>\n                                <div style={{ border: \"1px solid #ededed\", borderRadius: \"4px\", height: \"130px\", width: \"195px\", marginRight: \"28px\" }}>\n\n                                    <div style={{ width: \"100%\", height: \"56px\", backgroundColor: \"white\", borderBottom: \"1px solid #ededed\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <PopoutExample setMetric1={setMetric1} initialValue={{ value: \"impressions\", label: \"Impressions\" }} />\n                                    </div>\n                                    <div style={{ display: \"flex\", height: \"74px\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                                        <Text content={formatMetric(processedData, metric1)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 22]} />\n                                    </div>\n\n                                </div>\n                                <div style={{ border: \"1px solid #ededed\", borderRadius: \"4px\", height: \"130px\", width: \"195px\", marginRight: \"28px\" }}>\n\n                                    <div style={{ width: \"100%\", height: \"56px\", backgroundColor: \"white\", borderBottom: \"1px solid #ededed\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <PopoutExample setMetric1={setMetric2} initialValue={{ value: \"clicks\", label: \"Clicks\" }} />\n                                    </div>\n                                    <div style={{ display: \"flex\", height: \"74px\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                                        <Text content={formatMetric(processedData, metric2)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 22]} />\n                                    </div>\n\n                                </div>\n                                <div style={{ border: \"1px solid #ededed\", borderRadius: \"4px\", height: \"130px\", width: \"195px\", marginRight: \"28px\" }}>\n\n                                    <div style={{ width: \"100%\", height: \"56px\", backgroundColor: \"white\", borderBottom: \"1px solid #ededed\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <PopoutExample setMetric1={setMetric3} initialValue={{ value: \"dismissals\", label: \"Dismissals\" }} />\n                                    </div>\n                                    <div style={{ display: \"flex\", height: \"74px\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                                        <Text content={formatMetric(processedData, metric3)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 22]} />\n                                    </div>\n\n                                </div>\n                                <div style={{ border: \"1px solid #ededed\", borderRadius: \"4px\", height: \"130px\", width: \"195px\" }}>\n\n                                    <div style={{ width: \"100%\", height: \"56px\", backgroundColor: \"white\", borderBottom: \"1px solid #ededed\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <PopoutExample setMetric1={setMetric4} initialValue={{ value: \"landings\", label: \"10s Visits\" }} />\n                                    </div>\n                                    <div style={{ display: \"flex\", height: \"74px\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                                        <Text content={formatMetric(processedData, metric4)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 22]} />\n                                    </div>\n\n                                </div>\n\n\n                            </div>\n                            <div style={{ border: \"1px solid #ededed\", borderRadius: \"4px\", height: \"450px\", marginBottom: \"28px\" }}>\n                                <div style={{ width: \"100%\", height: \"56px\", backgroundColor: \"white\", borderBottom: \"1px solid #ededed\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", paddingRight: \"12px\" }}>\n                                    <Text style={{ marginLeft: \"40px\" }} content={\"Campaign Engagement\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n\n                                    <S.Grouping style={{ marginLeft: \"auto\" }} onClick={() => setGrouping(\"hourly\")} selected={grouping === \"hourly\"}>Hour</S.Grouping>\n                                    <S.Grouping onClick={() => setGrouping(\"daily\")} selected={grouping === \"daily\"}>Day</S.Grouping>\n                                    <S.Grouping onClick={() => setGrouping(\"weekly\")} selected={grouping === \"weekly\"}>Week</S.Grouping>\n                                    <S.Grouping onClick={() => setGrouping(\"monthly\")} selected={grouping === \"monthly\"}>Month</S.Grouping>\n                                </div>\n                                <div style={{ paddingLeft: \"28px\", paddingRight: \"28px\", paddingTop: \"14px\", paddingBottom: \"14px\" }}>\n                                    <HighchartsReact\n                                        highcharts={Highcharts}\n                                        options={options}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n\n                        {/* Right Side (Live Feed) */}\n                        <div style={{ width: \"25%\" }}>\n                            <div style={{ marginTop: \"14px\", border: \"1px solid #ededed\", borderRadius: \"4px\", height: \"608px\", marginLeft: \"28px\" }}>\n                                <div style={{ width: \"100%\", height: \"56px\", backgroundColor: \"white\", borderBottom: \"1px solid #ededed\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    <Text content={\"Campaign Insights\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Click-through rate:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={formatMetric(processedData, 'ctr')} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"10s visit rate:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={tempMetric(processedData, 'viewVisitRate')} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Dismissal rate:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={tempMetric(processedData, 'viewDismissalRate')} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Click to 10s visit rate:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={formatMetric(processedData, 'landingRate')} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Upvotes:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={formatMetric(processedData, 'upvotes')} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Downvotes:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={formatMetric(processedData, 'downvotes')} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Daily Budget:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={budgetMetric(dailyBudget, currency)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Spend:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={budgetMetric(spend, currency)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"Budget:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={budgetMetric(budget, currency)} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginLeft: \"28px\", alignItems: \"center\", marginTop: \"28px\" }}>\n                                    <Text style={{ marginRight: \"14px\" }} content={\"State:\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                                    <Text content={state} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 18]} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {campaign.type === \"fixed\" &&\n                        <Text style={{ marginLeft: \"4px\" }} content={\"Sponsored Image reporting is a statistical approximation, derived from the percentage of Brave users that are opted-in to Brave Ads.\"} fontFamily={\"Poppins\"} sizes={[18, 18, 42, 42, 14]} />\n                    }\n                </div >\n            }\n        </div>\n    );\n}\n\n\nexport default AnalyticsOverview;","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Signin/Signin.tsx",["723"],"import { withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../../../assets/fonts/fonts.css\";\n\nimport Button from \"../../../components/Button/Button\";\nimport Card from \"../../../components/Card/Card\";\nimport { H2 } from \"../../../components/Text/Text\";\nimport { Text } from \"../../../components/Text/Text\";\n// import Button from \"brave-ui/components/buttonsIndicators/button\";\n\nimport { GetAdvertisers, SignIn } from \"../../../actions\";\n\nimport { styles } from \"./SignIn.style\";\nimport * as S from \"./SignIn.style\";\n\nimport SigninForm from \"../../../components/SigninForm/Signin-form\";\nimport { Input } from \"../../../components/formElements/formElements\";\n\nimport base64url from \"base64url\";\n\nclass SignInContainer extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      submitting: false,\n      email: '',\n      password: '',\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit() {\n    const resp = await fetch(`${process.env.REACT_APP_SERVER_ADDRESS}/auth/token`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      } as any);\n    let data = await resp.json();\n\n    if (data === `Error in authentication Error: {\"error\":\"Invalid email or password\",\"statusCode\":400}`) {\n      alert(\"The username or password did not match our records. Please try again.\");\n    }\n\n    if (data.accessToken) {\n      const auth = await this.props.signin({ email: this.state.email, password: this.state.password, accessToken: data.accessToken });\n      await this.props.getAdvertiser(data);\n    }\n\n    if (data.error) {\n      alert(\"Error \" + data.error)\n    }\n\n    if (data.allowCredentials) {\n      this.get(data)\n    }\n\n    this.toggleSubmitting();\n\n  };\n\n  toggleSubmitting() {\n    this.setState({\n      submitting: !this.state.submitting\n    });\n  }\n\n  get(attestationObj) {\n\n    attestationObj.challenge = base64url.toBuffer(attestationObj.challenge);\n\n    attestationObj.allowCredentials.forEach((allowedCredential) => {\n      allowedCredential.id = base64url.toBuffer(allowedCredential.id);\n    });\n\n    navigator.credentials.get({ publicKey: attestationObj })\n      .then(async (cred: any) => {\n        await this.sendClientCredential(cred, attestationObj.userId);\n      })\n      .catch((err) => {\n        console.log(\"ERROR\", err);\n      });\n  }\n\n  publicKeyCredentialToJSON(pubKeyCred) {\n    if (pubKeyCred instanceof Array) {\n      let arr = [];\n      for (let i of pubKeyCred)\n        //@ts-ignore\n        arr.push(publicKeyCredentialToJSON(i));\n\n      return arr\n    }\n\n    if (pubKeyCred instanceof ArrayBuffer) {\n      //@ts-ignore\n      return base64url.encode(pubKeyCred)\n    }\n\n    if (pubKeyCred instanceof Object) {\n      let obj = {};\n\n      for (let key in pubKeyCred) {\n        obj[key] = this.publicKeyCredentialToJSON(pubKeyCred[key])\n      }\n\n      return obj\n    }\n\n    return pubKeyCred\n  }\n\n\n  async sendClientCredential(clientCredential, userId) {\n    const resp = await fetch(`${process.env.REACT_APP_SERVER_ADDRESS}/auth/challenge/${userId}`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.publicKeyCredentialToJSON(clientCredential))\n      });\n    let data = await resp.json();\n    try {\n      const auth = await this.props.signin({ email: this.state.email, password: this.state.password, accessToken: data.accessToken });\n      await this.props.getAdvertiser(data);\n    } catch (err) {\n      this.toggleSubmitting();\n    }\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handlePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  public render() {\n    const { auth, classes, signinForm } = this.props;\n    if (auth && auth.signedIn) {\n      return <Redirect to=\"/a\" />;\n    }\n    return (\n      <Card>\n        <S.Container>\n          <S.Content>\n            <S.Header>\n              <S.Logo />\n              <H2 fontFamily={\"Poppins\"} color={\"#434251\"}>\n                Sign into your brave account\n              </H2>\n            </S.Header>\n            <div style={{ marginBottom: \"32px\", marginTop: \"22px\" }}>\n              <div style={{ display: \"flex\" }}>\n                <Text content={\"Email\"} sizes={[16, 16, 15, 15, 13]} fontFamily={\"Poppins\"} />\n              </div>\n              <Input value={this.state.email} onChange={(e) => { this.handleEmail(e) }} placeholder={\"Enter your email...\"}></Input>\n            </div>\n            <div style={{ marginBottom: \"32px\" }}>\n              <div style={{ display: \"flex\" }}>\n                <Text content={\"Password\"} sizes={[16, 16, 15, 15, 13]} fontFamily={\"Poppins\"} />\n              </div>\n              <Input value={this.state.password} onChange={(e) => { this.handlePassword(e) }} placeholder={\"Enter your password...\"} type={\"password\"}></Input>\n            </div>\n\n            <S.ButtonContainer>\n              <Button onClick={this.submit} type={\"primary\"} size={\"medium\"}>\n                Sign in\n              </Button>\n            </S.ButtonContainer>\n            {/* <S.Footer>\n              <H6 fontFamily={\"Muli\"} style={{ paddingRight: \"8px\" }}>\n                {locale.SignIn.noAccount}\n              </H6>\n              <H6\n                fontFamily={\"Muli\"}\n                link={true}\n                onClick={() => (window.location.href = \"/auth/signup\")}\n              >\n                {locale.SignIn.signUp}\n              </H6>\n            </S.Footer> */}\n          </S.Content>\n        </S.Container>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  auth: state.authReducer,\n  signinForm: state.form.signin\n});\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => ({\n  getAdvertiser: (value: any) => dispatch(GetAdvertisers(value)),\n  signin: (value: any) => dispatch(SignIn(value))\n});\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SignInContainer)\n);\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/Advanced.tsx",["724"],"import React, { Component } from 'react';\nimport Context from \"../../../../../state/context\";\n\n\nimport FormProgress from './components/formProgress/FormProgress';\nimport CampaignForm from './components/campaignForm/CampaignForm';\nimport AdSetsForm from './components/adSetsForm/AdSetsForm';\nimport AdsForm from './components/adsForm/AdsForm';\nimport ReviewForm from './components/reviewForm/ReviewForm';\nimport CompletionForm from './components/completionForm/CompletionForm';\nimport AdvancedOrderSidebar from \"./components/advancedOrderSidebar/AdvancedOrderSidebar\";\n\nimport { initializeData, performValidation } from \"./lib/Library\";\nimport { connect } from 'react-redux';\n\nclass Advanced extends Component<any, any> {\n    static contextType = Context;\n    constructor(props) {\n        super(props);\n        this.state = {\n            progress: undefined,\n            form: undefined,\n            campaign: undefined,\n            adSets: undefined,\n            ads: undefined,\n        };\n        this.setForm = this.setForm.bind(this);\n        this.setCampaign = this.setCampaign.bind(this);\n        this.setAdSets = this.setAdSets.bind(this);\n        this.setSelectedAdSet = this.setSelectedAdSet.bind(this);\n        this.setSelectedAd = this.setSelectedAd.bind(this);\n        this.setAds = this.setAds.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n    public componentDidMount() {\n        this.initialize();\n    }\n\n    public async initialize() {\n        let start = await this.context.setLoading(true);\n        this.context.setSidebar(\"hidden\");\n        this.handleBrowserNav();\n        let that = this;\n        let initializedData = await initializeData(that);\n        this.setState(initializedData, () => {\n            this.context.setLoading(false);\n        });\n    }\n\n    handleBrowserNav() {\n        window.addEventListener(\"popstate\", e => {\n            // Nope, go back to your page\n            this.setForm(\"campaignForm\");\n            this.props.history.go(1);\n        });\n    }\n\n    public validate(validationRule) {\n        performValidation(this, validationRule, this.state.campaign, this.state.adSets, this.state.ads);\n    }\n\n    public setForm(form) {\n        this.validate(\"all\");\n        this.setState({ form })\n    }\n\n    public setCampaign(campaign) {\n        this.setState({ campaign })\n    }\n\n    public setAdSets(adSets) {\n        this.setState({ adSets })\n    }\n\n    public setSelectedAdSet(selectedAdSet) {\n        this.setState({ selectedAdSet }, () => {\n            this.validate(\"all\");\n        })\n    }\n\n    public setSelectedAd(selectedAd) {\n        this.setState({ selectedAd }, () => {\n            this.validate(\"all\");\n        })\n    }\n\n    public setAds(ads) {\n        this.setState({ ads }, () => {\n            this.validate(\"all\");\n        })\n    }\n\n    public async componentWillUnmount() {\n        await this.context.setLoading(undefined);\n        await this.context.setSidebar(\"visible\");\n    }\n\n    public renderForm() {\n        switch (this.state.form) {\n            case \"campaignForm\":\n                return <CampaignForm campaign={this.state.campaign} setCampaign={this.setCampaign} setForm={this.setForm} adSets={this.state.adSets} setAdSets={this.setAdSets} geoCodes={this.state.geoCodes} validations={this.state.validations} validate={this.validate} setSelectedAdSet={this.setSelectedAdSet} />\n            case \"adSetsForm\":\n                return <AdSetsForm adSets={this.state.adSets} campaign={this.state.campaign} setAdSets={this.setAdSets} setSelectedAdSet={this.setSelectedAdSet} selectedAdSet={this.state.selectedAdSet} setSelectedAd={this.setSelectedAd} setForm={this.setForm} segments={this.state.segments} validations={this.state.validations} validate={this.validate} />\n            case \"adsForm\":\n                return <AdsForm campaign={this.state.campaign} setAdSets={this.setAdSets} adSets={this.state.adSets} selectedAdSet={this.state.selectedAdSet} setSelectedAdSet={this.setSelectedAdSet} selectedAd={this.state.selectedAd} setSelectedAd={this.setSelectedAd} setForm={this.setForm} creativeOptions={this.state.creativeOptions} auth={this.props.auth} validations={this.state.validations} validate={this.validate} />\n            case \"reviewForm\":\n                return <ReviewForm campaign={this.state.campaign} adSets={this.state.adSets} ads={this.state.ads} setForm={this.setForm} auth={this.props.auth} advertiserId={this.state.advertiserId} userId={this.state.userId} setSelectedAdSet={this.setSelectedAdSet} setSelectedAd={this.setSelectedAd} validations={this.state.validations} validate={this.validate} />\n            case \"completionForm\":\n                return <CompletionForm editMode={this.state.campaign.editMode} />\n        }\n    }\n\n    render() {\n        return (\n            this.context.loading === false &&\n            <>\n                {/* <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\", backgroundColor: \"green\" }}></div> */}\n                {this.state.form !== \"completionForm\" &&\n                    <AdvancedOrderSidebar campaign={this.state.campaign} adSets={this.state.adSets} setAdSets={this.setAdSets} selectedAdSet={this.state.selectedAdSet} setSelectedAdSet={this.setSelectedAdSet} form={this.state.form} setForm={this.setForm} />\n                }\n                {/* <FormProgress form={this.state.form} setForm={this.setForm} errors={this.state.errors} campaign={this.state.campaign} adSets={this.state.adSets} ads={this.state.ads} /> */}\n                {this.renderForm()}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n    auth: state.authReducer,\n});\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => ({\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Advanced);","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/selection/Selection.tsx",["725"],"import React, { Component } from 'react';\n\nimport Context from \"../../../../../state/context\";\nimport { Text } from \"../../../../../components/Text/Text\";\nimport \"./lib/corner-ribbon.css\";\nimport Test from \"./lib/advanced_create2.png\";\nimport Test1 from \"./lib/quick_create5.png\";\nimport Test2 from \"./lib/automated_create.png\";\nimport { Link } from 'react-router-dom';\nconst linkStyle = { textDecoration: \"none\", color: \"inherit\" };\n\nclass Selection extends Component<any, any> {\n    static contextType = Context;\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    public componentDidMount() {\n        this.initialize();\n    }\n\n    public async initialize() {\n        //   this.context.setLoading(true);\n        this.context.setSidebar(\"none\");\n        let params = this.getSearchParameters(this.props.location) as any;\n        let userId = params.userId;\n        let advertiserId = params.advertiserId;\n        this.setState({ userId, advertiserId });\n\n        //   let data = await fetchData(this.props.auth.accessToken);\n        //   let processedData = processData(data);\n        //   this.setState(processedData, () => {\n        //     this.context.setLoading(false);\n        //   });\n    }\n\n    public componentWillUnmount() {\n        this.context.setLoading(undefined);\n        this.context.setSidebar(\"visible\");\n    }\n\n    getSearchParameters(location) {\n        var prmstr = location.search.substr(1);\n        return prmstr != null && prmstr != \"\" ? this.transformToAssocArray(prmstr) : {};\n    }\n\n    transformToAssocArray(prmstr) {\n        var params = {};\n        var prmarr = prmstr.split(\"&\");\n        for (var i = 0; i < prmarr.length; i++) {\n            var tmparr = prmarr[i].split(\"=\");\n            params[tmparr[0]] = tmparr[1];\n        }\n        return params;\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <div style={{ width: \"500px\", height: \"250px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"0px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Text sizes={[16, 16, 15, 15, 26]} fontFamily={\"Poppins\"}>\n                            Create an Ad Campaign\n                    </Text>\n                        <Text style={{ marginTop: \"12px\" }} sizes={[16, 16, 15, 15, 18]} fontFamily={\"Muli\"}>\n                            Choose an order type and we'll guide you through the rest.\n                    </Text>\n                    </div>\n                    <div style={{ width: \"100%\", height: \"400px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"12px\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n                        <div className={\"box\"} style={{ cursor: \"not-allowed\", display: \"flex\", width: \"340px\", height: \"370px\", borderRadius: \"4px\", border: \"1px solid #ededed\", padding: \"28px\", flexDirection: \"column\", alignItems: \"center\" }}>\n                            <img style={{ height: \"180px\", marginTop: \"0px\", marginLeft: \"auto\", marginRight: \"auto\", transform: \"scale(-1, 1)\" }} src={Test1} />\n                            <Text style={{ marginTop: \"16px\" }} sizes={[16, 16, 15, 15, 20]} fontFamily={\"Poppins\"}>\n                                Coming Soon!\n                        </Text>\n                            <Text style={{ marginTop: \"12px\", marginLeft: \"6px\", marginRight: \"1px\" }} sizes={[16, 16, 15, 15, 14]} fontFamily={\"Muli\"}>\n                                Publish a campaign in less than 5 minutes. Define your creatives and audience and you're on your way!\n                    </Text>\n                        </div>\n                        <Link style={linkStyle} to={`/user/main/adsmanager/advanced?userId=${this.state.userId}&advertiserId=${this.state.advertiserId}`}>\n                            <div className={\"box\"} style={{ display: \"flex\", width: \"340px\", height: \"370px\", borderRadius: \"4px\", border: \"1px solid #ededed\", padding: \"28px\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n                                <img style={{ height: \"180px\", transform: \"scale(-1, 1)\" }} src={Test} />\n                                <Text style={{ marginTop: \"16px\" }} sizes={[16, 16, 15, 15, 20]} fontFamily={\"Poppins\"}>\n                                    Advanced Order\n                        </Text>\n                                <Text style={{ marginTop: \"12px\", marginLeft: \"6px\", marginRight: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontFamily={\"Muli\"}>\n                                    Have complete control of your campaign, choose multiple ad sets, and fine tune your creatives.\n                    </Text>\n                            </div>\n                        </Link>\n                        <div className={\"box\"} style={{ cursor: \"not-allowed\", display: \"flex\", width: \"340px\", height: \"370px\", borderRadius: \"4px\", border: \"1px solid #ededed\", padding: \"28px\", flexDirection: \"column\", alignItems: \"center\" }}>\n                            <img style={{ height: \"180px\", marginTop: \"0px\", marginLeft: \"auto\", marginRight: \"auto\" }} src={Test2} />\n                            <Text style={{ marginTop: \"16px\" }} sizes={[16, 16, 15, 15, 20]} fontFamily={\"Poppins\"}>\n                                Coming Soon!\n                        </Text>\n                            <Text style={{ marginTop: \"12px\", marginLeft: \"6px\", marginRight: \"6px\" }} sizes={[16, 16, 15, 15, 14]} fontFamily={\"Muli\"}>\n                                Upload a prepared CSV or script and we'll convert it into a campaign for your review.\n                    </Text>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Selection;","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/campaignList/lib/CampaignList.queries.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/containers/Authentication/Signin/SignIn.style.ts",["726"],"import styled from \"styled-components\";\nimport BraveLogo from \"../../../assets/images/brave-logotype-full-color.png\";\n\nenum Breakpoint {\n  xs = \"576px\",\n  sm = \"768px\",\n  md = \"992px\",\n  lg = \"1200px\"\n}\n\nexport const Container = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  margin: auto;\n\n  @media (max-width: ${Breakpoint.xs}) {\n    width: 100%;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    width: 100%;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    width: 100%;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    width: 440px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    width: 440px;\n  }\n`;\n\nexport const Content = styled(\"div\")`\n  width: 100%;\n`;\n\nexport const Header = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n\nexport const Logo = styled(\"div\")`\n  width: 150px;\n  height: 50px;\n  margin-bottom: 24px;\n  background: url(${BraveLogo}) no-repeat center;\n  background-size: 100%;\n`;\n\nexport const ButtonContainer = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  margin-top: 38px;\n`;\n\nexport const Footer = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  margin-top: 36px;\n`;\n\nexport const styles: any = {\n  image: {\n    width: \"100px\"\n  },\n  root: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    minWidth: \"500px\",\n    padding: \"10px\"\n  },\n  row1: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  row1_column1: {\n    flexBasis: \"50%\",\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  row1_column2: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexBasis: \"50%\",\n    flexDirection: \"column\",\n    flexGrow: 0,\n    flexShrink: 0,\n    justifyContent: \"center\"\n  },\n  row2: {\n    flexBasis: \"50px\"\n  },\n  signuplink: {\n    margin: \"15px\",\n    textDecoration: \"none\"\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/campaignList/style/CampaignList.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/style/Navbar.style.ts",["727"],"\n\nimport styled from \"styled-components\";\nimport BraveLogo from \"../../../assets/images/brave-logotype-full-color.png\";\n\nconst drawerWidth = 240;\n\nenum Breakpoint {\n  xs = \"576px\",\n  sm = \"768px\",\n  md = \"992px\",\n  lg = \"1200px\"\n}\n\ninterface ContainerProps {\n  loading: boolean;\n}\nexport const Container = styled(\"div\")`\n${(props: ContainerProps) => `\n  display: flex;\n  width: 100%;\n  height: 64px;\n  border-bottom: ${props.loading ? \"2px solid #F6F6F5;\" : \"2px solid #FB7959;\"}\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  padding-left: 24px;\n  padding-right: 24px;\n`}\n`;\n\nexport const SubContainer = styled(\"div\")`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SearchContainer = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  border: 1px solid #dbdbdb;\n  height: 36px;\n  width: 478px;\n  border-radius: 4px;\n`;\n\nexport const SearchInput = styled(\"input\")`\n  border: none;\n  width: 90%;\n  height: 90%;\n  fontsize: 14px;\n  fontfamily: Poppins;\n  fontweight: 400;\n`;\n\nexport const Logo = styled(\"img\")`\n  @media (max-width: ${Breakpoint.xs}) {\n    height: 26px;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    height: 26px;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    height: 26px;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    height: 30px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    height: 30px;\n  }\n`;\n\n// export const Container = styled(\"div\")`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   height: 100%;\n//   margin: auto;\n// `;\n\nexport const styles = (theme: any) =>\n  ({\n    appBar: {\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        duration: theme.transitions.duration.leavingScreen,\n        easing: theme.transitions.easing.sharp\n      }),\n      zIndex: theme.zIndex.drawer + 1\n    },\n    appBarShift: {\n      [theme.breakpoints.up(\"md\")]: {\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          duration: theme.transitions.duration.enteringScreen,\n          easing: theme.transitions.easing.sharp\n        }),\n        width: `calc(100% - ${drawerWidth}px)`\n      }\n    },\n    flex: {\n      flex: 1\n    },\n    hide: {\n      display: \"none\"\n    },\n    logo: {\n      height: \"40px\",\n      width: \"40px\"\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 12\n    }\n  } as any);\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Text/Text.ts",["728"],"import styled from \"styled-components\";\n\n// TODO - Define sizes array more formally\n// [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]\ninterface TextProps {\n  fontFamily: string;\n  content?: string;\n  sizes?: any[];\n  fontWeight?: number;\n  color?: string;\n  link?: boolean;\n}\n\nenum Breakpoint {\n  xs = \"576px\",\n  sm = \"768px\",\n  md = \"992px\",\n  lg = \"1200px\"\n}\n\nexport const Text = styled(\"div\")`\n\n  ${(props: TextProps) => `\n    @media (max-width: ${Breakpoint.xs}) {\n      font-size: ${props.sizes![0] + \"px\"};\n    }\n    @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n      font-size: ${props.sizes![1] + \"px\"};\n    }\n    @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n      font-size: ${props.sizes![2] + \"px\"};\n    }\n    @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n      font-size: ${props.sizes![3] + \"px\"};\n    }\n    @media (min-width: ${Breakpoint.lg}) {\n      font-size: ${props.sizes![4] + \"px\"};\n    }\n  `}\n\n  // ** Font Family **\n  ${(props: TextProps) =>\n    `\n    font-family: ${props.fontFamily};\n\n    `}\n\n  // ** Font Weight **\n  ${(props: TextProps) =>\n    `\n    font-weight: ${props.fontWeight};\n\n    `}\n\n  // ** Color **\n  ${(props: TextProps) =>\n    `\n    color: ${props.color};\n\n    `}\n\n  // ** Link ** \n  ${props =>\n    props.link &&\n    `\n    color: #ff7654;\n    cursor: pointer;\n  `}\n\n  ${props =>\n    props.content &&\n    `\n    &::after {\n      content: \"${props.content}\";\n    }\n  `}\n`;\n\nexport const H1 = styled(\"div\")`\n  // ** Font Size **\n  @media (max-width: ${Breakpoint.xs}) {\n    font-size: 32px;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    font-size: 32px;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    font-size: 32px;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    font-size: 36px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    font-size: 36px;\n  }\n\n  // ** Font Family **\n  ${(props: TextProps) =>\n    `\n    font-family: ${props.fontFamily};\n\n    `}\n\n  // ** Font Weight **\n  ${(props: TextProps) =>\n    `\n    font-weight: ${props.fontWeight};\n\n    `}\n\n  // ** Color **\n  ${(props: TextProps) =>\n    `\n    color: ${props.color};\n\n    `}\n\n  // ** Link ** \n  ${props =>\n    props.link &&\n    `\n    color: #ff7654;\n    cursor: pointer;\n  `}\n`;\n\nexport const H2 = styled(\"div\")`\n  // ** Font Size **\n  @media (max-width: ${Breakpoint.xs}) {\n    font-size: 26px;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    font-size: 26px;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    font-size: 26px;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    font-size: 30px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    font-size: 30px;\n  }\n\n  // ** Font Family **\n  ${(props: TextProps) =>\n    `\n    font-family: ${props.fontFamily};\n\n    `}\n\n  // ** Font Weight **\n  ${(props: TextProps) =>\n    `\n    font-weight: ${props.fontWeight};\n\n    `}\n  \n  // ** Color **\n  ${(props: TextProps) =>\n    `\n    color: ${props.color};\n\n    `}\n\n  // ** Link ** \n  ${props =>\n    props.link &&\n    `\n    color: #ff7654;\n    cursor: pointer;\n  `}\n`;\n\nexport const H5 = styled(\"div\")`\n  // ** Font Size **\n  @media (max-width: ${Breakpoint.xs}) {\n    font-size: 18px;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    font-size: 18px;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    font-size: 18px;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    font-size: 22px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    font-size: 16px;\n  }\n\n  // ** Font Family **\n  ${(props: TextProps) =>\n    `\n    font-family: ${props.fontFamily};\n\n    `}\n\n  // ** Font Weight **\n  ${(props: TextProps) =>\n    `\n    font-weight: ${props.fontWeight};\n\n    `}\n\n  // ** Color **\n  ${(props: TextProps) =>\n    `\n    color: ${props.color};\n\n    `}\n\n  // ** Link ** \n  ${props =>\n    props.link &&\n    `\n    color: #ff7654;\n    cursor: pointer;\n  `}\n`;\n\nexport const H6 = styled(\"div\")`\n  // ** Font Size **\n  @media (max-width: ${Breakpoint.xs}) {\n    font-size: 14px;\n  }\n  @media (min-width: ${Breakpoint.xs}) and (max-width: ${Breakpoint.sm}) {\n    font-size: 14px;\n  }\n  @media (min-width: ${Breakpoint.sm}) and (max-width: ${Breakpoint.md}) {\n    font-size: 14px;\n  }\n  @media (min-width: ${Breakpoint.md}) and (max-width: ${Breakpoint.lg}) {\n    font-size: 18px;\n  }\n  @media (min-width: ${Breakpoint.lg}) {\n    font-size: 18px;\n  }\n\n  // ** Font Family **\n  ${(props: TextProps) =>\n    `\n    font-family: ${props.fontFamily};\n\n    `}\n\n  // ** Font Weight **\n  ${(props: TextProps) =>\n    `\n    font-weight: ${props.fontWeight};\n\n    `}\n\n  // ** Color **\n  ${(props: TextProps) =>\n    `\n    color: ${props.color};\n\n    `}\n\n  // ** Link ** \n  ${props =>\n    props.link &&\n    `\n    color: #ff7654;\n    cursor: pointer;\n  `}\n`;\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/formElements/formElements.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Card/Card.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Button/Button.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/styles/AnalyticsOverview.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/lib/Popout.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/lib/AnalyticsOverview.queries.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/section/Section.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Table/TableComponent.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/analytics/analyticsOverview/lib/AnalyticsOverview.library.tsx",["729"],"import axios from \"axios\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\n\n\nconst colors = [\"#4C54D2CC\", \"#A0A5EBCC\", \"#9370DBCC\", \"#8B008BCC\"];\n\n\nexport const downloadCSV = async (campaignId, campaignName, accessToken, userId, setDownloadingCSV) => {\n    setDownloadingCSV(true);\n    axios(`${process.env.REACT_APP_SERVER_ADDRESS}/report/campaign/csv/${campaignId}`, {\n        headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"-x-user\": userId,\n            \"Content-Type\": \"text/csv\",\n        }\n    })\n        .then(response => {\n            setDownloadingCSV(false);\n            const file = new Blob(\n                [response.data],\n                { type: 'text/csv', endings: 'transparent' });\n            const fileURL = URL.createObjectURL(file);\n            const link = document.createElement('a');\n            link.href = fileURL;\n            link.setAttribute('download', `${campaignName}.csv`);\n            document.body.appendChild(link);\n            link.click();\n        })\n        .catch(error => {\n        });\n}\n\n\n\nexport const prepareSankey = (impressions, clicks, landings, conversions) => {\n    console.log(impressions);\n    return {\n        chart: {\n            type: \"spline\",\n            height: \"169\",\n        },\n        title: {\n            text: undefined\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: {\n            categories: [\"Impressions\", \"Clicks\", \"10s Visits\"],\n        },\n        yAxis: {\n            title: {\n                text: undefined\n            },\n            opposite: true,\n            visible: false,\n            min: 0,\n            max: impressions\n        },\n        tooltip: {\n            shared: true\n        },\n        legend: {\n            enabled: false\n        },\n        series: [{\n            name: 'Count',\n            data: [impressions, clicks, landings],\n            color: colors[0]\n        }] as any\n    } as any;\n}\n\nexport const prepareChart = (metric1, metric1DataSet, metric2, metric2DataSet, metric3, metric3DataSet, metric4, metric4DataSet) => {\n\n    const decideAxis = (metric) => {\n        switch (metric) {\n            case 'impressions':\n            case 'clicks':\n            case 'landings':\n            case 'conversions':\n            case 'dismissals':\n            case 'upvotes':\n            case 'downvotes':\n                return 0;\n            case 'ctr':\n            case 'convRate':\n            case 'landingRate':\n                return 1\n        }\n    }\n\n    const decideValueSuffix = (metric) => {\n        switch (metric) {\n            case 'impressions':\n            case 'clicks':\n            case 'landings':\n            case 'conversions':\n            case 'dismissals':\n            case 'upvotes':\n            case 'downvotes':\n                return undefined;\n            case 'ctr':\n            case 'convRate':\n            case 'landingRate':\n                return \"%\"\n        }\n    }\n\n    const decideLabel = (metric) => {\n        switch (metric) {\n            case 'impressions':\n                return \"Impressions\";\n            case 'clicks':\n                return \"Clicks\";\n            case 'landings':\n                return \"Landings\";\n            case 'conversions':\n                return \"Conversions\";\n            case 'dismissals':\n                return \"Dismissals\";\n            case 'upvotes':\n                return \"Upvotes\";\n            case 'downvotes':\n                return \"Downvotes\";\n            case 'ctr':\n                return \"C.T.R.\";\n            case 'convRate':\n                return \"Conversion Rate\";\n            case 'landingRate':\n                return \"10s Visit Rate\";\n        }\n    }\n\n    return {\n        chart: {\n            type: \"spline\",\n            zoomType: \"x\",\n            height: \"364\",\n            spacingTop: 40,\n            spacingBottom: 10,\n            spacingRight: 0,\n            spacingLeft: 0,\n        },\n        title: {\n            text: undefined\n        },\n        credits: {\n            enabled: false\n        },\n        tooltip: {\n            shared: true\n        },\n        xAxis: {\n            type: 'datetime'\n        },\n        yAxis: [{\n            opposite: false,\n            title: {\n                text: undefined\n            },\n            tickAmount: 3,\n\n        },\n        {\n            opposite: true,\n            title: {\n                text: undefined\n            },\n            tickAmount: 3,\n            max: 100,\n            min: 0,\n\n        }],\n        legend: {\n            enabled: false\n        },\n        plotOptions: {\n            animation: false,\n            spline: {\n                connectNulls: true,\n                marker: {\n                    symbol: \"circle\",\n                    radius: 4\n                }\n            },\n            series: {\n                animation: false\n            }\n        },\n        series: [{\n            animation: false,\n            name: decideLabel(metric1),\n            yAxis: decideAxis(metric1),\n            data: metric1DataSet,\n            connectNulls: true,\n            color: colors[0],\n            tooltip: {\n                valueSuffix: decideValueSuffix(metric1)\n            }\n        },\n        {\n            animation: false,\n            name: decideLabel(metric2),\n            yAxis: decideAxis(metric2),\n            data: metric2DataSet,\n            connectNulls: true,\n            color: colors[1],\n            tooltip: {\n                valueSuffix: decideValueSuffix(metric2)\n            }\n        },\n        {\n            animation: false,\n            name: decideLabel(metric3),\n            yAxis: decideAxis(metric3),\n            data: metric3DataSet,\n            connectNulls: true,\n            color: colors[2],\n            tooltip: {\n                valueSuffix: decideValueSuffix(metric3)\n            }\n        },\n        {\n            animation: false,\n            name: decideLabel(metric4),\n            yAxis: decideAxis(metric4),\n            data: metric4DataSet,\n            connectNulls: true,\n            color: colors[3],\n            tooltip: {\n                valueSuffix: decideValueSuffix(metric4)\n            }\n        }] as any\n    } as any;\n}\n\n\n\n// Process Data \n\nconst mapGroupingName = (grouping) => {\n    switch (grouping) {\n        case 'hourly':\n            return \"hour\"\n        case 'daily':\n            return \"day\"\n        case 'weekly':\n            return \"week\"\n        case \"monthly\":\n            return \"month\"\n    }\n}\n\nconst compare = (a, b) => {\n    var dateA = new Date(a[0]);\n    var dateB = new Date(b[0]);\n    //@ts-ignore\n    return dateA - dateB;\n\n}\n\nconst initializeMetricValue = (metric) => {\n    switch (metric) {\n        case 'impressions':\n        case 'clicks':\n        case 'landings':\n        case 'conversions':\n        case 'dismissals':\n        case 'upvotes':\n        case 'downvotes':\n            return 0;\n        case 'ctr':\n        case 'convRate':\n        case 'landingRate':\n            return { numerator: 0, denominator: 0 }\n    }\n}\n\nconst calcMetricValue = (metric, metricValue) => {\n    if (metric === \"ctr\" || metric === \"convRate\" || metric === \"landingRate\") {\n        return parseFloat(((metricValue.numerator / metricValue.denominator) * 100).toFixed(2));\n    }\n    else {\n        return metricValue;\n    }\n}\n\nconst getValueForEngagement = (engagement, metric) => {\n    switch (metric) {\n        case 'impressions':\n            return engagement.type === \"view\" ? engagement.count : 0\n        case 'clicks':\n            return engagement.type === \"click\" ? engagement.count : 0\n        case 'landings':\n            return engagement.type === \"landed\" ? engagement.count : 0\n        case 'conversions':\n            return engagement.type === \"conversion\" ? engagement.count : 0\n        case 'dismissals':\n            return engagement.type === \"dismiss\" ? engagement.count : 0\n        case 'upvotes':\n            return engagement.type === \"upvote\" ? engagement.count : 0\n        case 'downvotes':\n            return engagement.type === \"downvote\" ? engagement.count : 0\n        case 'ctr':\n            if (engagement.type === \"click\") {\n                return { numerator: engagement.count }\n            }\n            if (engagement.type === \"view\") {\n                return { denominator: engagement.count }\n            }\n            else {\n                return { numerator: 0 }\n            }\n        case 'convRate':\n            if (engagement.type === \"conversion\") {\n                return { numerator: engagement.count }\n            }\n            if (engagement.type === \"click\") {\n                return { denominator: engagement.count }\n            }\n            else {\n                return { numerator: 0 }\n            }\n        case 'landingRate':\n            if (engagement.type === \"landed\") {\n                return { numerator: engagement.count }\n            }\n            if (engagement.type === \"click\") {\n                return { denominator: engagement.count }\n            }\n            else {\n                return { numerator: 0 }\n            }\n    }\n}\n\nconst applyEngagementValue = (metricValue, metricEngagementValue, metric) => {\n    switch (metric) {\n        case 'impressions':\n        case 'clicks':\n        case 'landings':\n        case 'conversions':\n        case 'dismissals':\n        case 'upvotes':\n        case 'downvotes':\n            return metricValue + metricEngagementValue;\n        case 'ctr':\n        case 'convRate':\n        case 'landingRate':\n            if (metricEngagementValue.numerator) {\n                metricValue.numerator += metricEngagementValue.numerator;\n            }\n            if (metricEngagementValue.denominator) {\n                metricValue.denominator += metricEngagementValue.denominator;\n            }\n            return metricValue\n    }\n}\n\nexport const processData = (engagements, metric1, metric2, metric3, metric4, grouping) => {\n\n    // Group data by user setting\n    let groupedData = _.groupBy(engagements, function (engagement) {\n        //@ts-ignore\n        return moment.utc(engagement.createdat).startOf(mapGroupingName(grouping));\n    });\n\n    // Calculate totals\n    let [impressions, clicks, dismissals, landings, conversions, upvotes, downvotes, ctr, convRate, landingRate, popularity] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    engagements.forEach((engagement) => {\n        switch (engagement.type) {\n            case 'view':\n                impressions += engagement.count;\n                break;\n            case 'click':\n                clicks += engagement.count;\n                break;\n            case 'dismiss':\n                dismissals += engagement.count;\n                break;\n            case 'landed':\n                landings += engagement.count;\n                break;\n            case 'conversion':\n                conversions += engagement.count;\n                break;\n            case 'upvote':\n                upvotes += engagement.count;\n                break;\n            case 'downvote':\n                downvotes += engagement.count;\n                break;\n        }\n    });\n\n    ctr = clicks / impressions;\n    convRate = conversions / clicks;\n    landingRate = landings / clicks;\n    popularity = upvotes / (upvotes + downvotes)\n\n    // Create data sets for chart \n\n    let metric1DataSet = [] as any;\n    let metric2DataSet = [] as any;\n    let metric3DataSet = [] as any;\n    let metric4DataSet = [] as any;\n\n    for (var key in groupedData) {\n\n        let date = moment(key).valueOf();\n        let metric1Value = initializeMetricValue(metric1);\n        let metric2Value = initializeMetricValue(metric2);\n        let metric3Value = initializeMetricValue(metric3);\n        let metric4Value = initializeMetricValue(metric4);\n\n        groupedData[key].forEach((engagement) => {\n            let metric1EngagementValue = getValueForEngagement(engagement, metric1);\n            let metric2EngagementValue = getValueForEngagement(engagement, metric2);\n            let metric3EngagementValue = getValueForEngagement(engagement, metric3);\n            let metric4EngagementValue = getValueForEngagement(engagement, metric4);\n\n            metric1Value = applyEngagementValue(metric1Value, metric1EngagementValue, metric1);\n            metric2Value = applyEngagementValue(metric2Value, metric2EngagementValue, metric2);\n            metric3Value = applyEngagementValue(metric3Value, metric3EngagementValue, metric3);\n            metric4Value = applyEngagementValue(metric4Value, metric4EngagementValue, metric4);\n        });\n\n        metric1DataSet.push([date, calcMetricValue(metric1, metric1Value)]);\n        metric2DataSet.push([date, calcMetricValue(metric2, metric2Value)])\n        metric3DataSet.push([date, calcMetricValue(metric3, metric3Value)])\n        metric4DataSet.push([date, calcMetricValue(metric4, metric4Value)])\n    }\n\n    metric1DataSet = metric1DataSet.sort(compare)\n    metric2DataSet = metric2DataSet.sort(compare)\n    metric3DataSet = metric3DataSet.sort(compare)\n    metric4DataSet = metric4DataSet.sort(compare)\n\n    return {\n        impressions,\n        clicks,\n        landings,\n        dismissals,\n        conversions,\n        ctr,\n        convRate,\n        landingRate,\n        upvotes,\n        downvotes,\n        metric1DataSet,\n        metric2DataSet,\n        metric3DataSet,\n        metric4DataSet\n    } as any;\n\n}\n\nexport const formatMetric = (data, metric) => {\n    switch (metric) {\n        case 'impressions':\n        case 'clicks':\n        case 'landings':\n        case 'conversions':\n        case 'dismissals':\n        case 'upvotes':\n        case 'downvotes':\n            return parseInt(data[metric]).toLocaleString();\n        case 'ctr':\n        case 'convRate':\n        case 'landingRate':\n            return (data[metric] * 100).toFixed(2) + \"%\";\n    }\n}\n\nexport const tempMetric = (data, metric) => {\n    switch (metric) {\n        case 'viewVisitRate':\n            return ((data[\"landings\"] / data[\"impressions\"] * 100).toFixed(2) + \"%\");\n        case 'viewDismissalRate':\n            return ((data[\"dismissals\"] / data[\"impressions\"] * 100).toFixed(2) + \"%\");\n    }\n}\n\nexport const budgetMetric = (budget, currency) => {\n    return budget + \" \" + currency;\n}\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/drawer/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaignList/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/advertiser/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/confirmationType/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/report/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativetype/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/invoice/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/geocode/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/user/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/snackbar/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/segment/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/snackbar/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/drawer/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeTypes/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/reports/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaignList/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/segments/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/geocodes/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/confirmationTypes/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/index.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/lib/Library.tsx",["730"],"import moment from \"moment\";\nimport { activeGeocodesQuery, campaignQuery, creativesQuery, segmentsQuery } from \"./Queries\";\n\nexport async function initializeData(context) {\n    let initializedData = {} as any;\n    initializedData.userId = getSearchParameters(context.props.location).userId;\n    initializedData.advertiserId = getSearchParameters(context.props.location).advertiserId;\n    initializedData.campaignId = getSearchParameters(context.props.location).campaignId;\n    initializedData.geoCodes = await initializeGeoCodes(activeGeocodesQuery, context.props.auth.accessToken);\n    initializedData.segments = await initializeSegments(segmentsQuery, context.props.auth.accessToken);\n    // TODO - Merge these two vars into one\n\n    let values = await initializeCampaign(campaignQuery, initializedData.campaignId, context.props.auth.accessToken);\n    [initializedData.campaign, initializedData.adSets] = await initializeCampaign(campaignQuery, initializedData.campaignId, context.props.auth.accessToken);\n    initializedData.selectedAdSet = 0;\n    initializedData.selectedAd = 0;\n    initializedData.validations = initializeValidations();\n    initializedData.form = \"campaignForm\";\n\n    console.log(initializedData);\n\n    return initializedData;\n}\n\nasync function initializeGeoCodes(query, accessToken) {\n    let data = await fetchData(query, accessToken)\n    let response = [] as any;\n    data.activeGeocodes.data.forEach((geocode) => {\n        response.push({ value: geocode.code, label: geocode.name })\n    });\n    return response;\n}\n\nasync function initializeSegments(query, accessToken) {\n    let data = await fetchData(query, accessToken)\n    let response = [] as any;\n    data.segments.data.forEach((segment) => {\n        if (segment.name !== 'untargeted') {\n            response.push({ value: segment.code, label: segment.name })\n        }\n    });\n    return response;\n}\n\nasync function initializeCreatives(query, accessToken, advertiserId) {\n    let data = await fetchData(query(advertiserId), accessToken)\n    let response = [] as any;\n    data.advertiser.creatives.forEach((creative) => {\n        response.push({ id: creative.id, name: creative.name, state: creative.state })\n    });\n    return response;\n}\n\nfunction initializeCreativeOptions(creatives) {\n    let creativeOptions = [] as any;\n    creatives.forEach((creative) => {\n        creativeOptions.push({\n            value: creative.id, label: creative.name\n        });\n    });\n    return creativeOptions;\n}\n\nasync function initializeCampaign(query, campaignId, accessToken) {\n\n    let campaign;\n    let adSets = [] as any;\n\n\n    if (campaignId) {\n        let data = await fetchData(query(campaignId), accessToken)\n\n        let geoTargets = [] as any;\n        data.campaign.geoTargets.forEach((geoCode) => {\n            geoTargets.push({ value: geoCode.code, label: geoCode.name })\n        });\n        if (geoTargets.length === 0) {\n            geoTargets = '';\n        }\n\n        let currency = { value: 'usd', label: 'USD' };\n        if (data.campaign.currency === \"BAT\") {\n            currency = { value: 'bat', label: 'BAT' };\n        }\n\n        let formatBudget = (budget) => {\n            let formattedString = budget.toString().replace(/[^\\d.]/g, '');\n            formattedString = parseFloat(formattedString).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            if (currency.label === \"USD\") {\n                formattedString = \"$\" + formattedString;\n            }\n            else {\n                formattedString = formattedString + \" BAT\";\n            }\n            if (formattedString.includes(\"NaN\")) {\n                formattedString = '';\n            }\n            return formattedString\n        }\n\n        let state = 'active'\n\n        if (data.campaign.state === \"active\" || data.campaign.state === \"daycomplete\") {\n            state = 'active'\n        } else if (data.campaign.state === \"under_review\") {\n            state = 'under_review'\n        } else {\n            state = 'paused'\n        }\n\n        let price = data.campaign.adSets[0].ads[0].prices[0].amount;\n\n        let globalBillingType = { value: 'cpm', label: 'Impressions (cpm)' };\n        if (data.campaign.adSets[0].billingType === 'cpc') {\n            globalBillingType = { value: 'cpc', label: 'Clicks (cpc)' };\n        }\n\n        campaign = {\n            objective: '',\n            id: campaignId,\n            state,\n            name: data.campaign.name,\n            startTime: moment(data.campaign.startAt).format('YYYY-MM-DD[T]HH:mm'),\n            endTime: moment(data.campaign.endAt).format('YYYY-MM-DD[T]HH:mm'),\n            dailyFrequencyCap: data.campaign.dailyCap,\n            geoTargets,\n            currency,\n            dailyBudget: formatBudget(data.campaign.dailyBudget),\n            totalBudget: formatBudget(data.campaign.budget),\n            spend: formatBudget(data.campaign.spent),\n            editMode: true,\n            price: formatBudget(price),\n            globalBillingType\n        }\n\n        data.campaign.adSets.forEach((adSet) => {\n            let pricingType = { value: 'cpm', label: 'Impressions (cpm)' };\n            if (adSet.billingType === 'cpc') {\n                pricingType = { value: 'cpc', label: 'Clicks (cpc)' };\n            }\n            let audiences = [] as any;\n            let braveML = false;\n            adSet.segments.forEach((segment) => {\n                if (segment.name = 'untargeted') {\n                    braveML = true;\n                }\n                audiences.push({ value: segment.code, label: segment.name })\n            })\n            if (audiences.length === 0) {\n                audiences = '';\n                braveML = true;\n            }\n            let platforms = [] as any;\n            adSet.oses.forEach((os) => {\n                platforms.push({ value: os.code, label: os.name })\n            })\n            if (platforms.length === 0) {\n                platforms = [\n                    { value: \"_Bt5nxrNo\", label: \"macos\" },\n                    { value: \"k80syyzDa\", label: \"ios\" },\n                    { value: \"i1g4cO6Pl\", label: \"windows\" },\n                    { value: \"-Ug5OXisJ\", label: \"linux\" },\n                    { value: \"mbwfZU-4W\", label: \"android\" },\n                ];\n            }\n            if (platforms.length === 0) {\n                platforms = [\n                    { value: \"_Bt5nxrNo\", label: \"macos\" },\n                    { value: \"k80syyzDa\", label: \"ios\" },\n                    { value: \"i1g4cO6Pl\", label: \"windows\" },\n                    { value: \"-Ug5OXisJ\", label: \"linux\" },\n                    { value: \"mbwfZU-4W\", label: \"android\" },\n                ];\n            }\n\n            let conversion = {\n                type: 'postview',\n                url: '',\n                observationWindow: { value: 30, label: \"30\" },\n            } as any;\n\n            if (adSet.conversions[0]) {\n                conversion = {\n                    type: adSet.conversions[0].type,\n                    url: adSet.conversions[0].urlPattern,\n                    observationWindow: { value: adSet.conversions[0].observationWindow, label: adSet.conversions[0].observationWindow.toString() }\n                }\n            }\n\n            let ads = [] as any;\n\n            adSet.ads.forEach((ad) => {\n                if (ad.state !== 'deleted') {\n                    let state = 'active'\n\n                    if (ad.creative.state === \"active\") {\n                        state = 'active'\n                    } else if (ad.creative.state === \"under_review\") {\n                        state = 'under_review'\n                    }\n                    else {\n                        state = 'paused'\n                    }\n                    ads.push({\n                        id: ad.id,\n                        creative: ad.creative.id,\n                        newCreative: false,\n                        state,\n                        name: ad.creative.name,\n                        title: ad.creative.payload.title,\n                        body: ad.creative.payload.body,\n                        targetUrl: ad.creative.payload.targetUrl,\n                        creativeUrl: '',\n                        size: '',\n                        notificationAd: true,\n                        inPageAd: false,\n                        channels: '',\n                        previewAssets: {\n                            title: ad.creative.payload.title,\n                            body: ad.creative.payload.body,\n                            creativeUrl: '',\n                        }\n                    });\n                }\n            })\n\n            adSets.push({\n                id: adSet.id,\n                newAdSet: false,\n                pricingType,\n                bid: formatBudget(price),\n                lifeTimeImpressions: adSet.totalMax,\n                dailyImpressions: adSet.perDay,\n                braveML,\n                audiences,\n                platforms,\n                conversion,\n                ads\n            })\n        });\n    } else {\n\n        campaign = {\n            objective: '',\n            id: '',\n            name: '',\n            startTime: moment().format('YYYY-MM-DD[T]HH:mm'),\n            endTime: moment().add(1, \"month\").format('YYYY-MM-DD[T]HH:mm'),\n            dailyFrequencyCap: '',\n            geoTargets: '',\n            currency: { value: 'usd', label: 'USD' },\n            dailyBudget: '',\n            totalBudget: '',\n            cpm: true,\n            cpc: false,\n            bid: '',\n            state: \"active\",\n            editMode: false\n        }\n\n\n\n        adSets = [\n            {\n                id: '',\n                newAdSet: true,\n                pricingType: { value: 'cpm', label: 'Impressions (cpm)' },\n                bid: '',\n                lifetimeImpressions: '',\n                dailyImpressions: '',\n                braveML: true,\n                audiences: '',\n                platforms: [\n                    { value: \"_Bt5nxrNo\", label: \"macos\" },\n                    { value: \"k80syyzDa\", label: \"ios\" },\n                    { value: \"i1g4cO6Pl\", label: \"windows\" },\n                    { value: \"-Ug5OXisJ\", label: \"linux\" },\n                    { value: \"mbwfZU-4W\", label: \"android\" },\n                ],\n                conversion: {\n                    type: 'postview',\n                    url: '',\n                    observationWindow: { value: 30, label: \"30\" },\n                },\n                ads: [\n                    {\n                        id: '',\n                        creative: '',\n                        newCreative: true,\n                        state: 'under_review',\n                        name: '',\n                        title: '',\n                        body: '',\n                        targetUrl: '',\n                        creativeUrl: '',\n                        size: '',\n                        notificationAd: true,\n                        inPageAd: false,\n                        channels: '',\n                        previewAssets: {\n                            title: '',\n                            body: '',\n                            creativeUrl: '',\n                        }\n                    }\n                ]\n            }\n        ]\n\n    }\n\n    return [campaign, adSets];\n}\n\n// function initializeAds() {\n//     let ads = [\n//         {\n//             creative: '',\n//             adSets: '',\n//             newCreative: true,\n//             name: '',\n//             title: '',\n//             body: '',\n//             targetUrl: '',\n//             previewAssets: {\n//                 title: null,\n//                 body: null,\n//             }\n//         }\n//     ]\n//     return ads;\n// }\n\nexport function performValidation(context, validationRule, campaign, adSets, ads) {\n\n    let validations = initializeValidations();\n    validations.adSets = [] as any;\n\n    // TODO \n    // Add validations.campaignName.resolveMessage = null and validations.campaignName.resolveHook = null;\n    // These can be displayed next to the error as a link back to the corresponding form element\n\n    if (campaign.name === '') {\n        validations.campaignName = {} as any;\n        validations.campaignName.valid = false;\n        validations.campaignName.errorMessage = \"Campaign name is required, please set a campaign name.\";\n    }\n    if (moment(campaign.startTime) > moment(campaign.endTime) && (validationRule === \"campaignForm\" || validationRule === 'all')) {\n        validations.schedule = {} as any;\n        validations.schedule.valid = false;\n        validations.schedule.errorMessage = \"Campaign end date cannot be before start date\";\n    }\n\n    if (campaign.editMode) {\n        if (moment(campaign.endTime) < moment() && (validationRule === \"campaignForm\" || validationRule === 'all')) {\n            validations.endTimeSchedule = {} as any;\n            validations.endTimeSchedule.valid = false;\n            validations.endTimeSchedule.errorMessage = \"Campaign end date can only be updated to the future\";\n        }\n    }\n\n    let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: \"numeric\" };\n    let startTime = new Date(campaign.startTime).toLocaleDateString(\"en-US\", options);\n    let endTime = new Date(campaign.endTime).toLocaleDateString(\"en-US\", options);\n\n    if (startTime === \"Invalid Date\") {\n        validations.startTime = {} as any;\n        validations.startTime.valid = false;\n        validations.startTime.errorMessage = \"Start time is not valid, please select valid start time.\";\n    }\n\n    if (endTime === \"Invalid Date\") {\n        validations.endTime = {} as any;\n        validations.endTime.valid = false;\n        validations.endTime.errorMessage = \"End time is not valid, please select valid start time.\";\n    }\n\n    if (parseFloat(campaign.dailyBudget.replace(/[^\\d.]/g, '')) > parseFloat(campaign.totalBudget.replace(/[^\\d.]/g, '')) && (validationRule === \"campaignForm\" || validationRule === 'all')) {\n        validations.budget = {} as any;\n        validations.budget.valid = false;\n        validations.budget.errorMessage = \"Daily budget cannot be greater than lifetime budget.\";\n    }\n\n    if (campaign.editMode) {\n        if (parseFloat(campaign.totalBudget.replace(/[^\\d.]/g, '')) < parseFloat(campaign.spend.replace(/[^\\d.]/g, '')) && (validationRule === \"campaignForm\" || validationRule === 'all')) {\n            validations.budgetSpend = {} as any;\n            validations.budgetSpend.valid = false;\n            validations.budgetSpend.errorMessage = \"Budget cannot be less than current campaign spend.\";\n        }\n    }\n\n\n    if (campaign.geoTargets === '' || campaign.geoTargets === null) {\n        validations.geoTargets = {} as any;\n        validations.geoTargets.valid = false;\n        validations.geoTargets.errorMessage = \"Locations are required, please choose at least one location.\";\n    }\n\n    if (campaign.dailyBudget === '') {\n        validations.dailyBudget = {} as any;\n        validations.dailyBudget.valid = false;\n        validations.dailyBudget.errorMessage = \"Daily budget is required, please enter a daily budget.\";\n    }\n    if (campaign.totalBudget === '') {\n        validations.totalBudget = {} as any;\n        validations.totalBudget.valid = false;\n        validations.totalBudget.errorMessage = \"Lifetime budget is required, please enter a lifetime budget.\";\n    }\n\n    if (adSets) {\n        adSets.forEach((adSet, adSetIndex) => {\n            validations.adSets.push({} as any);\n\n            if ((adSet.audiences === '' || adSet.audiences === null) && adSet.braveML === false) {\n                validations.adSets[adSetIndex].audiences = {} as any;\n                validations.adSets[adSetIndex].audiences.valid = false;\n                validations.adSets[adSetIndex].audiences.errorMessage = `Audience is required, please select an audience.`;\n            }\n\n            if (adSet.pricingType === '' || adSet.pricingType === null) {\n                validations.adSets[adSetIndex].pricingType = {} as any;\n                validations.adSets[adSetIndex].pricingType.valid = false;\n                validations.adSets[adSetIndex].pricingType.errorMessage = `Pricing type required, please select a pricing type.`;\n            }\n\n            // if (adSet.bid === '') {\n            //     validations.adSets[adSetIndex].bid = {} as any;\n            //     validations.adSets[adSetIndex].bid.valid = false;\n            //     validations.adSets[adSetIndex].bid.errorMessage = `Bid is required, please enter a bid.`;\n            // }\n\n            // if (parseFloat(adSet.bid.replace(/[^\\d.]/g, '')) > parseFloat(campaign.dailyBudget.replace(/[^\\d.]/g, ''))) {\n            //     validations.adSets[adSetIndex].bidBudget = {} as any;\n            //     validations.adSets[adSetIndex].bidBudget.valid = false;\n            //     validations.adSets[adSetIndex].bidBudget.errorMessage = `Bid cannot be greater than daily budget, please update bid.`;\n            // }\n\n            if (adSet.platforms === '' || adSet.platforms === null) {\n                validations.adSets[adSetIndex].platforms = {} as any;\n                validations.adSets[adSetIndex].platforms.valid = false;\n                validations.adSets[adSetIndex].platforms.errorMessage = `Platform is required, please select at least one platform.`;\n            }\n\n            if (adSet.ads) {\n                validations.adSets[adSetIndex].ads = [] as any;\n                adSet.ads.forEach((ad, index) => {\n                    validations.adSets[adSetIndex].ads.push({} as any);\n                    if (ad.name === '') {\n                        validations.adSets[adSetIndex].ads[index].name = {} as any;\n                        validations.adSets[adSetIndex].ads[index].name.valid = false;\n                        validations.adSets[adSetIndex].ads[index].name.errorMessage = `Creative name is required, please enter a creative name.`;\n                    }\n                    if (ad.title === '') {\n                        validations.adSets[adSetIndex].ads[index].title = {} as any;\n                        validations.adSets[adSetIndex].ads[index].title.valid = false;\n                        validations.adSets[adSetIndex].ads[index].title.errorMessage = `Creative title is required, please enter a title for your creative.`;\n                    }\n                    if (ad.body === '') {\n                        validations.adSets[adSetIndex].ads[index].body = {} as any;\n                        validations.adSets[adSetIndex].ads[index].body.valid = false;\n                        validations.adSets[adSetIndex].ads[index].body.errorMessage = `Creative body is required, please enter a body for your creative.`;\n                    }\n                    if (ad.targetUrl === '') {\n                        validations.adSets[adSetIndex].ads[index].targetUrl = {} as any;\n                        validations.adSets[adSetIndex].ads[index].targetUrl.valid = false;\n                        validations.adSets[adSetIndex].ads[index].targetUrl.errorMessage = `Creative target url is required, please enter a target url for your creative.`;\n                    }\n                })\n            }\n        })\n    }\n\n\n\n    Object.keys(validations).forEach((key) => {\n        // If campaign validation triggered, set form to invalid\n        if (key !== 'valid' && key !== 'adSets' && key !== 'ads') {\n            if (validations[key].valid === false) {\n                validations.valid = false;\n            }\n        }\n\n        // If ad set validation triggered, set form to invalid\n        if (key === 'adSets') {\n            if (validations.adSets) {\n                validations.adSets.forEach((adSet) => {\n                    if (Object.keys(adSet)) {\n                        Object.keys(adSet).forEach((key) => {\n                            if (adSet[key].valid === false) {\n                                validations.valid = false;\n                            }\n                            if (key === \"ads\") {\n                                if (adSet[\"ads\"]) {\n                                    adSet[\"ads\"].forEach((ad) => {\n                                        if (Object.keys(ad)) {\n                                            Object.keys(ad).forEach((key) => {\n                                                if (ad[key].valid === false) {\n                                                    validations.valid = false;\n                                                }\n                                            });\n                                        }\n                                    })\n                                }\n                            }\n                        });\n                    }\n                })\n            }\n        };\n    });\n\n    context.setState({ validations });\n}\n\nfunction initializeValidations() {\n    let validations = {\n        valid: null,\n    } as any;\n    return validations;\n}\n\nexport function getSearchParameters(location) {\n    var prmstr = location.search.substr(1);\n    return prmstr != null && prmstr != \"\" ? transformToAssocArray(prmstr) : {} as any;\n}\n\nfunction transformToAssocArray(prmstr) {\n    var params = {};\n    var prmarr = prmstr.split(\"&\");\n    for (var i = 0; i < prmarr.length; i++) {\n        var tmparr = prmarr[i].split(\"=\");\n        params[tmparr[0]] = tmparr[1];\n    }\n    return params as any;\n}\n\nasync function fetchData(query, accessToken) {\n    let url = `${process.env.REACT_APP_SERVER_ADDRESS}`.replace(\"v1\", \"graphql\");\n    const options = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ query })\n    };\n\n    let response = await fetch(url, options);\n    let json = await response.json();\n    return json.data;\n}\n\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/advancedOrderSidebar/AdvancedOrderSidebar.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/completionForm/CompletionForm.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/ReviewForm.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/Table/Table.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/user/user.create.ts",["731"],"import {\n  IUserAction,\n  IUserPayload,\n  USER_CREATE_FAILED,\n  USER_CREATE_START,\n  USER_CREATE_SUCCESSFUL,\n} from \"../../actions\";\nimport { IUserState } from \"./user.interface\";\n\nexport const createUserReducer = (state: IUserState, action: IUserAction): IUserState => {\n  switch (action.type) {\n    case USER_CREATE_START:\n      return {\n        ...state,\n      };\n    case USER_CREATE_SUCCESSFUL:\n      return {\n        users: [\n          action.payload as IUserPayload,\n          ...state.users,\n        ],\n      };\n    case USER_CREATE_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/segment/segment.get.ts",["732"],"import {\n  GET_SEGMENTS_FAILD,\n  GET_SEGMENTS_START,\n  GET_SEGMENTS_SUCCESSFUL,\n  ISegmentAction,\n  ISegmentPayload,\n} from \"../../actions\";\nimport { ISegmentState } from \"./segment.interface\";\n\nexport const getSegmentReducer = (state: ISegmentState, action: ISegmentAction): ISegmentState => {\n  switch (action.type) {\n    case GET_SEGMENTS_START:\n      return {\n        ...state,\n      };\n    case GET_SEGMENTS_SUCCESSFUL:\n      return {\n        segments: action.payload as ISegmentPayload[],\n      };\n    case GET_SEGMENTS_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/creativeset.get.ts",["733"],"import {\n  GET_CREATIVESETS_FAILD,\n  GET_CREATIVESETS_START,\n  GET_CREATIVESETS_SUCCESSFUL,\n  ICreativeSetAction,\n  ICreativeSetPayload,\n} from \"../../actions\";\nimport { ICreativeSetState } from \"./creativeset.interface\";\n\nexport const getCreativeSetReducer = (state: ICreativeSetState, action: ICreativeSetAction): ICreativeSetState => {\n  switch (action.type) {\n    case GET_CREATIVESETS_START:\n      return {\n        ...state,\n      };\n    case GET_CREATIVESETS_SUCCESSFUL:\n      return {\n        creativesets: action.payload as ICreativeSetPayload[],\n      };\n    case GET_CREATIVESETS_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/creativeset.create.ts",["734"],"import {\n  CREATE_CREATIVESETS_FAILED,\n  CREATE_CREATIVESETS_START,\n  CREATE_CREATIVESETS_SUCCESSFUL,\n  ICreativeSetAction,\n  ICreativeSetPayload,\n} from \"../../actions\";\nimport { ICreativeSetState } from \"./creativeset.interface\";\n\nexport const createCreativeSetReducer = (state: ICreativeSetState, action: ICreativeSetAction): ICreativeSetState => {\n  switch (action.type) {\n    case CREATE_CREATIVESETS_START:\n      return {\n        ...state,\n      };\n    case CREATE_CREATIVESETS_SUCCESSFUL:\n      return {\n        creativesets: [\n          action.payload as ICreativeSetPayload,\n          ...state.creativesets,\n        ],\n      };\n    case CREATE_CREATIVESETS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeset/creativeset.update.ts",["735"],"import _ from \"lodash\";\n\nimport {\n  ICreativeSetAction,\n  ICreativeSetPayload,\n  UPDATE_CREATIVESETS_FAILED,\n  UPDATE_CREATIVESETS_START,\n  UPDATE_CREATIVESETS_SUCCESSFUL,\n} from \"../../actions\";\nimport { ICreativeSetState } from \"./creativeset.interface\";\n\nexport const updateCreativeSetReducer = (state: ICreativeSetState, action: ICreativeSetAction): ICreativeSetState => {\n  switch (action.type) {\n    case UPDATE_CREATIVESETS_START:\n      return {\n        ...state,\n      };\n    case UPDATE_CREATIVESETS_SUCCESSFUL:\n      const creativesets = _.filter(state.creativesets, (item) => {\n        return item.id !== (action.payload as ICreativeSetPayload).id;\n      });\n      creativesets.unshift(action.payload as ICreativeSetPayload);\n      return {\n        creativesets,\n      };\n    case UPDATE_CREATIVESETS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/user/user.get.ts",["736"],"import {\n  GETALL_USER_FAILED,\n  GETALL_USER_START,\n  GETALL_USER_SUCCESSFUL,\n  IUserAction,\n  IUserPayload,\n} from \"../../actions\";\nimport { IUserState } from \"./user.interface\";\n\nexport const getUserReducer = (state: IUserState, action: IUserAction): IUserState => {\n  switch (action.type) {\n    case GETALL_USER_START:\n      return {\n        ...state,\n      };\n    case GETALL_USER_SUCCESSFUL:\n      return {\n        users: action.payload as IUserPayload[],\n      };\n    case GETALL_USER_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/creative.update.ts",["737"],"import _ from \"lodash\";\n\nimport {\n  ICreativeAction,\n  ICreativePayload,\n  UPDATE_CREATIVES_FAILED,\n  UPDATE_CREATIVES_START,\n  UPDATE_CREATIVES_SUCCESSFUL,\n} from \"../../actions\";\nimport { ICreativeState } from \"./creative.interface\";\n\nexport const updateCreativeReducer = (state: ICreativeState, action: ICreativeAction): ICreativeState => {\n  switch (action.type) {\n    case UPDATE_CREATIVES_START:\n      return {\n        ...state,\n      };\n    case UPDATE_CREATIVES_SUCCESSFUL:\n      const creatives = _.filter(state.creatives, (item, index) => {\n        return item.id !== (action.payload as ICreativePayload).id;\n      });\n      creatives.unshift(action.payload as ICreativePayload);\n      return {\n        creatives,\n      };\n    case UPDATE_CREATIVES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/invoice/invoice.update.ts",["738"],"import _ from \"lodash\";\n\nimport {\n  IInvoiceAction,\n  IInvoicePayload,\n  UPDATE_INVOICES_FAILED,\n  UPDATE_INVOICES_START,\n  UPDATE_INVOICES_SUCCESSFUL,\n} from \"../../actions\";\nimport { IInvoiceState } from \"./invoice.interface\";\n\nexport const updateCreativeReducer = (state: IInvoiceState, action: IInvoiceAction): IInvoiceState => {\n  switch (action.type) {\n    case UPDATE_INVOICES_START:\n      return {\n        ...state,\n      };\n    case UPDATE_INVOICES_SUCCESSFUL:\n      const invoices = _.filter(state.invoices, (item, index) => {\n        return item.id !== (action.payload as IInvoicePayload).id;\n      });\n      invoices.unshift(action.payload as IInvoicePayload);\n      return {\n        invoices,\n      };\n    case UPDATE_INVOICES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/creative.create.ts",["739"],"import {\n  CREATE_CREATIVES_FAILED,\n  CREATE_CREATIVES_START,\n  CREATE_CREATIVES_SUCCESSFUL,\n  ICreativeAction,\n  ICreativePayload,\n} from \"../../actions\";\nimport { ICreativeState } from \"./creative.interface\";\n\nexport const createCreativeReducer = (state: ICreativeState, action: ICreativeAction): ICreativeState => {\n  switch (action.type) {\n    case CREATE_CREATIVES_START:\n      return {\n        ...state,\n      };\n    case CREATE_CREATIVES_SUCCESSFUL:\n      return {\n        creatives: [\n          action.payload as ICreativePayload,\n          ...state.creatives,\n        ],\n      };\n    case CREATE_CREATIVES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/geocode/geocode.get.ts",["740"],"import {\n  GET_GEOCODES_FAILD,\n  GET_GEOCODES_START,\n  GET_GEOCODES_SUCCESSFUL,\n  IGeocodeAction,\n  IGeocodePayload,\n} from \"../../actions\";\nimport { IGeocodeState } from \"./geocode.interface\";\n\nexport const getGeocodeReducer = (state: IGeocodeState, action: IGeocodeAction): IGeocodeState => {\n  switch (action.type) {\n    case GET_GEOCODES_START:\n      return {\n        ...state,\n      };\n    case GET_GEOCODES_SUCCESSFUL:\n      return {\n        geocodes: action.payload as IGeocodePayload[],\n      };\n    case GET_GEOCODES_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/invoice/invoice.get.ts",["741"],"import {\n  GET_INVOICES_FAILED,\n  GET_INVOICES_START,\n  GET_INVOICES_SUCCESSFUL,\n  IInvoiceAction,\n  IInvoicePayload,\n} from \"../../actions\";\nimport { IInvoiceState } from \"./invoice.interface\";\n\nexport const getInvoiceReducer = (state: IInvoiceState, action: IInvoiceAction): IInvoiceState => {\n  switch (action.type) {\n    case GET_INVOICES_START:\n      return {\n        ...state,\n      };\n    case GET_INVOICES_SUCCESSFUL:\n      return {\n        invoices: action.payload as IInvoicePayload[],\n      };\n    case GET_INVOICES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.signin.ts",["742"],"import jwtDecode from \"jwt-decode\";\n\nimport { ISignInPayload, SIGN_IN_FAILED, SIGN_IN_START, SIGN_IN_SUCCESSFUL, SIGN_OUT } from \"../../actions\";\nimport { IAuthAction, IAuthPayload } from \"../../actions\";\n\nimport { IAuthState } from \"./auth.interface\";\n\nexport const signInReducer = (state: IAuthState, action: IAuthAction): IAuthState => {\n  switch (action.type) {\n    case SIGN_IN_START:\n      return {\n        accessToken: \"\",\n        email: (action.payload as ISignInPayload).email,\n        emailVerified: false,\n        id: \"\",\n        role: \"\",\n        signedIn: false,\n      };\n    case SIGN_IN_SUCCESSFUL:\n      const accessToken = (action.payload as IAuthPayload).accessToken;\n      const decodedToken = jwtDecode(accessToken) as IAuthState;\n      return {\n        accessToken,\n        email: decodedToken.email,\n        emailVerified: decodedToken.emailVerified,\n        id: decodedToken.id,\n        role: decodedToken.role,\n        signedIn: true,\n      };\n    case SIGN_IN_FAILED:\n      return {\n        accessToken: \"\",\n        email: \"\",\n        emailVerified: false,\n        id: \"\",\n        role: \"\",\n        signedIn: false,\n      };\n    case SIGN_OUT:\n      return {\n        accessToken: \"\",\n        email: \"\",\n        emailVerified: false,\n        id: \"\",\n        role: \"\",\n        signedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.verify.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creative/creative.get.ts",["743"],"import {\n  GET_CREATIVES_FAILED,\n  GET_CREATIVES_START,\n  GET_CREATIVES_SUCCESSFUL,\n  ICreativeAction,\n  ICreativePayload,\n} from \"../../actions\";\nimport { ICreativeState } from \"./creative.interface\";\n\nexport const getCreativeReducer = (state: ICreativeState, action: ICreativeAction): ICreativeState => {\n  switch (action.type) {\n    case GET_CREATIVES_START:\n      return {\n        ...state,\n      };\n    case GET_CREATIVES_SUCCESSFUL:\n      return {\n        creatives: action.payload as ICreativePayload[],\n      };\n    case GET_CREATIVES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.signup.ts",["744"],"import {\n  IAuthAction,\n  ISignUpPayload,\n  ISignUpSuccessfulPayload,\n  SIGN_UP_FAILED,\n  SIGN_UP_START,\n  SIGN_UP_SUCCESSFUL,\n} from \"../../actions\";\n\nimport { IAuthState } from \"./auth.interface\";\n\nexport const signUpReducer = (state: IAuthState, action: IAuthAction): IAuthState => {\n  switch (action.type) {\n    case SIGN_UP_START:\n      return {\n        accessToken: \"\",\n        email: (action.payload as ISignUpPayload).email,\n        emailVerified: false,\n        id: \"\",\n        role: \"\",\n        signedIn: false,\n      };\n    case SIGN_UP_SUCCESSFUL:\n      return {\n        accessToken: \"\",\n        email: (action.payload as ISignUpSuccessfulPayload).email,\n        emailVerified: false,\n        id: \"\",\n        role: \"\",\n        signedIn: false,\n      };\n    case SIGN_UP_FAILED:\n      return {\n        accessToken: \"\",\n        email: \"\",\n        emailVerified: false,\n        id: \"\",\n        role: \"\",\n        signedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/auth/auth.resend.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativetype/creativetype.get.ts",["745"],"import {\n  GET_CREATIVETYPES_FAILD,\n  GET_CREATIVETYPES_START,\n  GET_CREATIVETYPES_SUCCESSFUL,\n  ICreativeTypeAction,\n  ICreativeTypePayload,\n} from \"../../actions\";\nimport { ICreativeTypeState } from \"./creativetype.interface\";\n\nexport const getCreativeTypeReducer = (state: ICreativeTypeState, action: ICreativeTypeAction): ICreativeTypeState => {\n  switch (action.type) {\n    case GET_CREATIVETYPES_START:\n      return {\n        ...state,\n      };\n    case GET_CREATIVETYPES_SUCCESSFUL:\n      return {\n        creativeTypes: action.payload as ICreativeTypePayload[],\n      };\n    case GET_CREATIVETYPES_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/OutsideAlerter/OutSideAlerter.tsx",["746"],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/segments/segments.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaignList/campaignList.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/geocodes/geocodes.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/geocodes/geocodes.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/confirmationTypes/confirmationTypess.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.update.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/confirmationTypes/confirmationTypes.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.delete.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.create.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativesets/creativesets.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeinstances/creativeInstances.create.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/invoices.update.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/invoices.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/invoices/invoices.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.update.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.create.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/advertisers/advertisers.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/segments/segments.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/reports/reports.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaignList/campaignList.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/reports/reports.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/auth.signup.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/auth.signin.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/ReviewForm.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/library/ReviewForm.library.ts",["747"],"import { createAdMutation, createAdSetMutation, createCampaignMutation, createCreativeMutation, updateAdMutation, updateAdSetMutation, updateCampaignMutation } from \"./ReviewForm.queries\";\nimport normalizeUrl from 'normalize-url';\n\n\nasync function processAdSets(adSets, userId, advertiserId, accessToken, campaign) {\n    let createAdSetsInput = [] as any;\n    if (adSets) {\n        for (const adSet of adSets) {\n            let createAdSetInput = {\n                execution: \"per_click\",\n                perDay: 1,\n                totalMax: 10,\n                billingType: adSet.pricingType.value,\n            } as any;\n            let segments = [] as any;\n\n            if (adSet.braveML === true) {\n                segments.push({\n                    code: \"Svp7l-zGN\",\n                    name: \"untargeted\"\n                });\n            }\n            else {\n                if (adSet.audiences) {\n                    adSet.audiences.forEach((audience) => {\n                        let entry = {\n                            code: audience.value,\n                            name: audience.label\n                        }\n                        segments.push(entry);\n                    })\n                }\n            }\n\n            createAdSetInput.segments = segments;\n\n            let platforms = [] as any;\n\n            if (adSet.platforms) {\n                adSet.platforms.forEach((platform) => {\n                    let entry = {\n                        code: platform.value,\n                        name: platform.label\n                    }\n                    platforms.push(entry);\n                });\n            }\n\n            createAdSetInput.oses = platforms;\n\n            let conversions = [] as any;\n\n            if (adSet.conversion.url !== '') {\n                conversions.push({\n                    urlPattern: adSet.conversion.url,\n                    type: adSet.conversion.type,\n                    observationWindow: adSet.conversion.observationWindow.value\n                })\n            }\n\n            createAdSetInput.conversions = conversions;\n\n            let ads = await processAds(adSet, userId, advertiserId, accessToken, campaign);\n            createAdSetInput.ads = ads;\n            createAdSetsInput.push(createAdSetInput);\n        }\n    }\n    return createAdSetsInput;\n}\n\nasync function processAdSet(adSets, userId, advertiserId, accessToken, campaign) {\n    let createAdSetsInput = [] as any;\n    if (adSets) {\n        for (const adSet of adSets) {\n            let createAdSetInput = {\n                id: adSet.id,\n                campaignId: campaign.id,\n                execution: \"per_click\",\n                perDay: 1,\n                totalMax: 10,\n                billingType: adSet.pricingType.value,\n            } as any;\n            let segments = [] as any;\n\n            if (adSet.braveML === true) {\n                segments.push({\n                    code: \"Svp7l-zGN\",\n                    name: \"untargeted\"\n                });\n            }\n            else {\n                if (adSet.audiences) {\n                    adSet.audiences.forEach((audience) => {\n                        let entry = {\n                            code: audience.value,\n                            name: audience.label\n                        }\n                        segments.push(entry);\n                    })\n                }\n            }\n            segments = JSON.stringify(segments).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\");\n            createAdSetInput.segments = segments;\n\n            let platforms = [] as any;\n\n            if (adSet.platforms) {\n                adSet.platforms.forEach((platform) => {\n                    let entry = {\n                        code: platform.value,\n                        name: platform.label\n                    }\n                    platforms.push(entry);\n                });\n            }\n            platforms = JSON.stringify(platforms).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\");\n            createAdSetInput.oses = platforms;\n\n            let conversions = [] as any;\n\n            if (adSet.conversion.url !== '') {\n                conversions.push({\n                    urlPattern: adSet.conversion.url,\n                    type: adSet.conversion.type,\n                    observationWindow: adSet.conversion.observationWindow.value\n                })\n            }\n            conversions = JSON.stringify(conversions).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\");\n            createAdSetInput.conversions = conversions;\n\n            createAdSetsInput.push(createAdSetInput);\n        }\n    }\n    return createAdSetsInput;\n}\n\n\n// Prepare the graphql input for requesting \nasync function processCampaign(userId, advertiserId, campaign, adSets, accessToken) {\n\n    let createCampaignInput = {\n        id: campaign.id,\n        userId,\n        advertiserId,\n        name: campaign.name,\n        startAt: new Date(campaign.startTime),\n        endAt: new Date(campaign.endTime),\n        type: \"paid\",\n        source: \"direct\",\n        currency: campaign.currency.label,\n        budget: campaign.totalBudget.replace(/[^0-9\\.]/g, ''),\n        dailyBudget: campaign.dailyBudget.replace(/[^0-9\\.]/g, ''),\n        dailyCap: 1,\n        state: \"under_review\"\n    } as any;\n\n    if (campaign.editMode) {\n        if (campaign.state === \"active\") {\n            createCampaignInput.state = 'active'\n        } else if (campaign.state === \"under_review\") {\n            createCampaignInput.state = 'under_review'\n        } else {\n            createCampaignInput.state = 'paused'\n        }\n    }\n\n    let geoTargets = [] as any;\n    if (campaign.geoTargets) {\n        campaign.geoTargets.forEach((geoTarget) => {\n            let entry = {\n                code: geoTarget.value,\n                name: geoTarget.label\n            }\n            geoTargets.push(entry);\n        })\n    }\n    geoTargets = JSON.stringify(geoTargets).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\");\n    createCampaignInput.geoTargets = geoTargets;\n\n    // Good up to here, now process Ad Sets. \n    // let adSetsInput = await processAdSets(adSets, userId, advertiserId, accessToken);\n\n    // createCampaignInput.adSets = JSON.stringify(adSetsInput);\n\n\n    createCampaignInput.adSets = adSetNumberFilter(JSON.stringify(await processAdSets(adSets, userId, advertiserId, accessToken, campaign)).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\"));\n\n    return createCampaignInput;\n}\n\nfunction adSetNumberFilter(adsets) {\n    return adsets.replace(/\"([0-9]+\\.{0,1}[0-9]*)\"/g, \"$1\");\n}\n\nasync function processAds(adSet, userId, advertiserId, accessToken, campaign) {\n\n    let createAdInput = [] as any;\n\n    if (adSet.ads) {\n\n        for (const ad of adSet.ads) {\n\n            let creativeId = await processCreativeId(ad, advertiserId, accessToken, userId);\n\n            let entry = {} as any;\n\n            entry.id = ad.id;\n            entry.creativeId = creativeId;\n\n\n            if (adSet.pricingType.value === \"cpm\") {\n                entry.prices = [{ amount: adSet.bid.replace(/[^0-9\\.]/g, ''), type: \"view\" }]\n            }\n            else {\n                entry.prices = [{ amount: adSet.bid.replace(/[^0-9\\.]/g, ''), type: \"click\" }]\n            }\n\n            // if (adSet.pricingType.value === \"cpm\" && campaign.currency.label === \"USD\") {\n            //     entry.prices = [{ amount: 20, type: \"view\" }]\n            //     console.log(entry.prices);\n            // }\n            // else if (adSet.pricingType.value === \"cpm\" && campaign.currency.label === \"BAT\") {\n            //     entry.prices = [{ amount: 70, type: \"view\" }]\n            //     console.log(entry.prices);\n            // }\n            // else if (adSet.pricingType.value === \"cpc\" && campaign.currency.label === \"USD\") {\n            //     entry.prices = [{ amount: .20, type: \"click\" }]\n            //     console.log(entry.prices);\n            // }\n            // else if (adSet.pricingType.value === \"cpc\" && campaign.currency.label === \"BAT\") {\n            //     entry.prices = [{ amount: 1, type: \"click\" }]\n            //     console.log(entry.prices);\n            // }\n\n            entry.webhooks = [];\n\n            createAdInput.push(entry);\n\n        }\n\n        return createAdInput;\n\n    }\n}\n\nasync function processAd(ad, adSetId, pricingType, bid, userId, advertiserId, accessToken) {\n\n    let createAdInput = [] as any;\n\n    let creativeId = await processCreativeId(ad, advertiserId, accessToken, userId);\n\n    let entry = {} as any;\n\n    entry.id = ad.id;\n    entry.creativeId = creativeId;\n    entry.creativeSetId = adSetId;\n    entry.state = ad.state;\n\n    if (pricingType.value === \"cpm\") {\n        entry.prices = `[{ amount: ${parseFloat(bid.replace(/[^0-9\\.]/g, ''))}, type: \"view\" }]`\n    }\n    else {\n        entry.prices = `[{ amount: ${parseFloat(bid.replace(/[^0-9\\.]/g, ''))}, type: \"click\" }]`\n    }\n\n    entry.webhooks = [];\n\n    createAdInput.push(entry);\n\n\n    return createAdInput;\n\n}\n\n\n\nasync function processCreativeId(ad, advertiserId, accessToken, userId) {\n\n    if (ad.creative !== '') {\n        return ad.creative\n    }\n    else {\n        let createCreativeInput = {\n            advertiserId,\n            userId,\n            name: ad.name,\n        } as any;\n\n        let type = JSON.stringify({\n            code: \"notification_all_v1\", name: \"notification\"\n        }).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\");\n        createCreativeInput.type = type;\n\n        let payload = JSON.stringify({\n            title: ad.title,\n            body: ad.body,\n            targetUrl: normalizeUrl(ad.targetUrl, { forceHttps: true })\n        }).replace(/\\\"([^(\\\")\"]+)\\\":/g, \"$1:\");\n\n        createCreativeInput.payload = payload;\n        let newCreative = await graphQLRequest(createCreativeMutation(createCreativeInput), accessToken);\n        return newCreative.createNotificationCreative.id;\n    }\n}\n\nasync function graphQLRequest(query, accessToken) {\n    let url = `${process.env.REACT_APP_SERVER_ADDRESS}`.replace(\"v1\", \"graphql\");\n    const options = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ query })\n    };\n\n    let response = await fetch(url, options);\n    let json = await response.json();\n    return json.data;\n}\n\nexport async function submitOrder(userId, advertiserId, campaign, adSets, accessToken) {\n    console.log(adSets);\n    let processedCampaign = await processCampaign(userId, advertiserId, campaign, adSets, accessToken)\n    if (!campaign.editMode) {\n        let response = await graphQLRequest(createCampaignMutation(processedCampaign), accessToken);\n    } else {\n        let response = await graphQLRequest(updateCampaignMutation(processedCampaign), accessToken);\n        for (const adSet of adSets) {\n            if (adSet.newAdSet === true) {\n                let temp = [] as any;\n                temp.push(adSet);\n                let processedAdSet = await processAdSet(temp, userId, advertiserId, accessToken, campaign);\n                let response = await graphQLRequest(createAdSetMutation(processedAdSet[0]), accessToken);\n                adSet.id = response.createAdSet.id;\n            } else {\n                let temp = [] as any;\n                temp.push(adSet);\n                let processedAdSet = await processAdSet(temp, userId, advertiserId, accessToken, campaign);\n                let response = await graphQLRequest(updateAdSetMutation(processedAdSet[0]), accessToken);\n            }\n\n            for (const ad of adSet.ads) {\n                if (ad.newCreative === true) {\n                    let processedAd = await processAd(ad, adSet.id, adSet.pricingType, adSet.bid, userId, advertiserId, accessToken);\n                    let response = await graphQLRequest(createAdMutation(processedAd[0]), accessToken);\n                } else {\n                    console.log(\"processing \" + ad.id);\n                    let processedAd = await processAd(ad, adSet.id, adSet.pricingType, adSet.bid, userId, advertiserId, accessToken);\n                    let response = await graphQLRequest(updateAdMutation(processedAd[0]), accessToken);\n                }\n            }\n        }\n    }\n}\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/advancedOrderSidebar/styles/AdvancedOrderSidebar.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/lib/Queries.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/auth/auth.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeTypes/creativetypes.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/modal/Modal.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creativeTypes/creativetypes.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/drawer/drawer.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.update.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.create.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/creatives/creatives.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/reviewForm/library/ReviewForm.queries.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/snackbar/snackbar.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.resend.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.update.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.verify.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/user.create.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/users.interface.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/users/users.getall.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.update.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.create.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/actions/campaigns/campaigns.get.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/report/report.get.ts",["748"],"import _ from \"lodash\";\n\nimport {\n  GET_REPORTS_FAILD,\n  GET_REPORTS_START,\n  GET_REPORTS_SUCCESSFUL,\n  IReportAction,\n  IReportPayload,\n} from \"../../actions\";\nimport { IReportState } from \"./report.interface\";\n\nexport const getReportReducer = (state: IReportState, action: IReportAction): IReportState => {\n  switch (action.type) {\n    case GET_REPORTS_START:\n      return {\n        ...state,\n      };\n    case GET_REPORTS_SUCCESSFUL:\n      const reports = _.filter(state.reports, (report)=>{\n        const campaignId = (action.payload as IReportPayload).campaignId;\n        return campaignId !== report.campaignId;\n      });\n      reports.unshift(action.payload as IReportPayload);\n      return {\n        reports,\n      };\n    case GET_REPORTS_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/creativeinstance.delete.ts",["749"],"import _ from \"lodash\";\n\nimport {\n  DELETE_CREATIVEINSTANCES_FAILED,\n  DELETE_CREATIVEINSTANCES_START,\n  DELETE_CREATIVEINSTANCES_SUCCESSFUL,\n  ICreativeInstanceAction,\n  ICreativeInstancePayload,\n} from \"../../actions\";\nimport { ICreativeInstanceState } from \"./creativeinstance.interface\";\n\nexport const deleteCreativeInstanceReducer = (state: ICreativeInstanceState, action: ICreativeInstanceAction):\n  ICreativeInstanceState => {\n  switch (action.type) {\n    case DELETE_CREATIVEINSTANCES_START:\n      return {\n        ...state,\n      };\n    case DELETE_CREATIVEINSTANCES_SUCCESSFUL:\n      const creativeInstances = _.filter(state.creativeInstances, (item) => {\n        return item.id !== (action.payload as ICreativeInstancePayload).id;\n      });\n      return {\n        creativeInstances,\n      };\n    case DELETE_CREATIVEINSTANCES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/creativeinstance.get.ts",["750"],"import {\n  GET_CREATIVEINSTANCES_FAILD,\n  GET_CREATIVEINSTANCES_START,\n  GET_CREATIVEINSTANCES_SUCCESSFUL,\n  ICreativeInstanceAction,\n  ICreativeInstancePayload,\n} from \"../../actions\";\nimport { ICreativeInstanceState } from \"./creativeinstance.interface\";\n\nexport const getCreativeInstanceReducer = (state: ICreativeInstanceState, action: ICreativeInstanceAction):\n  ICreativeInstanceState => {\n  switch (action.type) {\n    case GET_CREATIVEINSTANCES_START:\n      return {\n        ...state,\n      };\n    case GET_CREATIVEINSTANCES_SUCCESSFUL:\n      return {\n        creativeInstances: action.payload as ICreativeInstancePayload[],\n      };\n    case GET_CREATIVEINSTANCES_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/creativeinstance/creativeinstance.create.ts",["751"],"import {\n  CREATE_CREATIVEINSTANCES_FAILED,\n  CREATE_CREATIVEINSTANCES_START,\n  CREATE_CREATIVEINSTANCES_SUCCESSFUL,\n  ICreativeInstanceAction,\n  ICreativeInstancePayload,\n} from \"../../actions\";\nimport { ICreativeInstanceState } from \"./creativeinstance.interface\";\n\nexport const createCreativeIstanceReducer = (state: ICreativeInstanceState, action: ICreativeInstanceAction):\n  ICreativeInstanceState => {\n  switch (action.type) {\n    case CREATE_CREATIVEINSTANCES_START:\n      return {\n        ...state,\n      };\n    case CREATE_CREATIVEINSTANCES_SUCCESSFUL:\n      return {\n        creativeInstances: [\n          action.payload as ICreativeInstancePayload,\n          ...state.creativeInstances,\n        ],\n      };\n    case CREATE_CREATIVEINSTANCES_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/confirmationType/confirmationType.get.ts",["752"],"import {\n  GET_CONFIRMATIONTYPES_FAILD,\n  GET_CONFIRMATIONTYPES_START,\n  GET_CONFIRMATIONTYPES_SUCCESSFUL,\n  IConfirmationTypeAction,\n  IConfirmationTypePayload,\n} from \"../../actions\";\nimport { IConfirmationTypeState } from \"./confirmationType.interface\";\n\nexport const getConfirmationTypeReducer = (state: IConfirmationTypeState, action: IConfirmationTypeAction): IConfirmationTypeState => {\n  switch (action.type) {\n    case GET_CONFIRMATIONTYPES_START:\n      return {\n        ...state,\n      };\n    case GET_CONFIRMATIONTYPES_SUCCESSFUL:\n      return {\n        confirmationTypes: action.payload as IConfirmationTypePayload[],\n      };\n    case GET_CONFIRMATIONTYPES_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/advertiser/advertiser.get.ts",["753"],"import {\n  GET_ADVERTISERS_FAILD,\n  GET_ADVERTISERS_START,\n  GET_ADVERTISERS_SUCCESSFUL,\n  IAdvertiserAction,\n  IAdvertiserPayload,\n} from \"../../actions\";\nimport { IAdvertiserState } from \"./advertiser.interface\";\n\nexport const getAdvertiserReducer = (state: IAdvertiserState, action: IAdvertiserAction): IAdvertiserState => {\n  switch (action.type) {\n    case GET_ADVERTISERS_START:\n      return {\n        ...state,\n      };\n    case GET_ADVERTISERS_SUCCESSFUL:\n      return {\n        advertisers: action.payload as IAdvertiserPayload[],\n      };\n    case GET_ADVERTISERS_FAILD:\n      return {\n        advertisers: [],\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/advertiser/advertiser.create.ts",["754"],"import {\n  CREATE_ADVERTISERS_FAILED,\n  CREATE_ADVERTISERS_START,\n  CREATE_ADVERTISERS_SUCCESSFUL,\n  IAdvertiserAction,\n  IAdvertiserPayload,\n} from \"../../actions\";\nimport { IAdvertiserState } from \"./advertiser.interface\";\n\nexport const createAdvertiserReducer = (state: IAdvertiserState, action: IAdvertiserAction): IAdvertiserState => {\n  switch (action.type) {\n    case CREATE_ADVERTISERS_START:\n      return {\n        ...state,\n      };\n    case CREATE_ADVERTISERS_SUCCESSFUL:\n      return {\n        advertisers: [\n          action.payload as IAdvertiserPayload,\n          ...state.advertisers,\n        ],\n      };\n    case CREATE_ADVERTISERS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaignList/campaignList.get.ts",["755"],"import {\n    GET_CAMPAIGN_LIST_FAILED,\n    GET_CAMPAIGN_LIST_START,\n    GET_CAMPAIGN_LIST_SUCCESSFUL,\n    ICampaignListAction,\n    ICampaignListPayload,\n} from \"../../actions\";\nimport { ICampaignListState } from \"./campaignList.interface\";\n\nexport const getCampaignListReducer = (state: ICampaignListState, action: ICampaignListAction): ICampaignListState => {\n    switch (action.type) {\n        case GET_CAMPAIGN_LIST_START:\n            return {\n                ...state,\n            };\n        case GET_CAMPAIGN_LIST_SUCCESSFUL:\n            return {\n                campaignList: action.payload as ICampaignListPayload[],\n            };\n        case GET_CAMPAIGN_LIST_FAILED:\n            return {\n                ...state,\n            };\n        default:\n            return state;\n    }\n};\n\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/campaign.update.ts",["756"],"import _ from \"lodash\";\n\nimport {\n  ICampaignAction,\n  ICampaignPayload,\n  UPDATE_CAMPAIGNS_FAILED,\n  UPDATE_CAMPAIGNS_START,\n  UPDATE_CAMPAIGNS_SUCCESSFUL,\n} from \"../../actions\";\nimport { ICampaignState } from \"./campaign.interface\";\n\nexport const updateCampaignReducer = (state: ICampaignState, action: ICampaignAction): ICampaignState => {\n  switch (action.type) {\n    case UPDATE_CAMPAIGNS_START:\n      return {\n        ...state,\n      };\n    case UPDATE_CAMPAIGNS_SUCCESSFUL:\n      const campaigns = _.filter(state.campaigns, (item) => {\n        return item.id !== (action.payload as ICampaignPayload).id;\n      });\n      campaigns.unshift(action.payload as ICampaignPayload);\n      return {\n        campaigns,\n      };\n    case UPDATE_CAMPAIGNS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/campaign.get.ts",["757"],"import {\n  GET_CAMPAIGNS_FAILD,\n  GET_CAMPAIGNS_START,\n  GET_CAMPAIGNS_SUCCESSFUL,\n  ICampaignAction,\n  ICampaignPayload,\n} from \"../../actions\";\nimport { ICampaignState } from \"./campaign.interface\";\n\nexport const getCampaignReducer = (state: ICampaignState, action: ICampaignAction): ICampaignState => {\n  switch (action.type) {\n    case GET_CAMPAIGNS_START:\n      return {\n        ...state,\n      };\n    case GET_CAMPAIGNS_SUCCESSFUL:\n      return {\n        campaigns: action.payload as ICampaignPayload[],\n      };\n    case GET_CAMPAIGNS_FAILD:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/reducers/campaign/campaign.create.ts",["758"],"import {\n  CREATE_CAMPAIGNS_FAILED,\n  CREATE_CAMPAIGNS_START,\n  CREATE_CAMPAIGNS_SUCCESSFUL,\n  ICampaignAction,\n  ICampaignPayload,\n} from \"../../actions\";\nimport { ICampaignState } from \"./campaign.interface\";\n\nexport const createCampaignReducer = (state: ICampaignState, action: ICampaignAction): ICampaignState => {\n  switch (action.type) {\n    case CREATE_CAMPAIGNS_START:\n      return {\n        ...state,\n      };\n    case CREATE_CAMPAIGNS_SUCCESSFUL:\n      return {\n        campaigns: [\n          action.payload as ICampaignPayload,\n          ...state.campaigns,\n        ],\n      };\n    case CREATE_CAMPAIGNS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/section/Section.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/sidebar/Sidebar.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/AdsForm.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adSetsForm/AdSetsForm.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/campaignForm/CampaignForm.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/components/UserMenu/UserMenu.tsx",["759"],"import * as React from \"react\";\nimport * as S from \"./UserMenu.style\";\n\nimport Icon from \"@material-ui/core\";\nimport { H6, H5 } from \"../../../../../components/Text/Text\";\nimport { Link } from \"react-router-dom\";\n\nclass UserMenu extends React.Component<any, any> {\n  public render() {\n    return (\n      <S.Menu open={this.props.menuOpen}>\n        <Link style={{ textDecoration: \"none\", color: \"inherit\" }} to={`/user/main/settings`}>\n          <S.MenuItem>\n            <H5 fontFamily={\"Poppins\"}>Settings</H5>\n          </S.MenuItem>\n        </Link>\n        <S.MenuItem onClick={this.props.signOut}>\n          <H5 fontFamily={\"Poppins\"}>Sign out</H5>\n        </S.MenuItem>\n      </S.Menu>\n    );\n  }\n}\n\nexport default UserMenu;\n","/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adSetsForm/AdSetsForm.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/campaignForm/CampaignForm.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/AdsForm.style.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/lib/AdsForm.library.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/radioButton/RadioButton.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/creativePreview/OSNotificationCreativePreview/OSNotificationCreativePreview.tsx",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/components/navbar/components/UserMenu/UserMenu.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/components/radioButton/RadioButton.style.ts",[],"/Users/Daniel/Documents/brave/bsg/ads/ads-ui/src/user/views/adsManager/views/advanced/components/adsForm/lib/AdsForm.queries.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"760","line":25,"column":35},{"ruleId":null,"fatal":true,"severity":2,"message":"761","line":32,"column":16},{"ruleId":null,"fatal":true,"severity":2,"message":"762","line":44,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"763","line":13,"column":10},{"ruleId":null,"fatal":true,"severity":2,"message":"764","line":4,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"764","line":4,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"765","line":23,"column":30},{"ruleId":null,"fatal":true,"severity":2,"message":"766","line":46,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"767","line":18,"column":10},{"ruleId":null,"fatal":true,"severity":2,"message":"768","line":89,"column":38},{"ruleId":null,"fatal":true,"severity":2,"message":"769","line":47,"column":9},{"ruleId":null,"fatal":true,"severity":2,"message":"770","line":35,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"771","line":18,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"772","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"773","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"774","line":15,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"775","line":72,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"776","line":5,"column":30},{"ruleId":null,"fatal":true,"severity":2,"message":"777","line":19,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"778","line":18,"column":34},{"ruleId":null,"fatal":true,"severity":2,"message":"779","line":18,"column":38},{"ruleId":null,"fatal":true,"severity":2,"message":"780","line":19,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"781","line":20,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"782","line":18,"column":31},{"ruleId":null,"fatal":true,"severity":2,"message":"783","line":20,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"784","line":20,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"785","line":19,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"786","line":18,"column":34},{"ruleId":null,"fatal":true,"severity":2,"message":"787","line":18,"column":34},{"ruleId":null,"fatal":true,"severity":2,"message":"788","line":13,"column":32},{"ruleId":null,"fatal":true,"severity":2,"message":"789","line":18,"column":35},{"ruleId":null,"fatal":true,"severity":2,"message":"790","line":17,"column":32},{"ruleId":null,"fatal":true,"severity":2,"message":"791","line":18,"column":39},{"ruleId":null,"fatal":true,"severity":2,"message":"792","line":17,"column":10},{"ruleId":null,"fatal":true,"severity":2,"message":"793","line":6,"column":32},{"ruleId":null,"fatal":true,"severity":2,"message":"794","line":20,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"795","line":21,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"796","line":19,"column":43},{"ruleId":null,"fatal":true,"severity":2,"message":"797","line":20,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"798","line":18,"column":43},{"ruleId":null,"fatal":true,"severity":2,"message":"799","line":18,"column":37},{"ruleId":null,"fatal":true,"severity":2,"message":"800","line":19,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"801","line":18,"column":46},{"ruleId":null,"fatal":true,"severity":2,"message":"802","line":20,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"803","line":18,"column":35},{"ruleId":null,"fatal":true,"severity":2,"message":"804","line":19,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"805","line":9,"column":10},"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 23 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mPersistGate\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m  \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mProvider\u001b[39m\u001b[33m>\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 | \u001b[39m  document\u001b[33m.\u001b[39mgetElementById(\u001b[32m\"root\"\u001b[39m) as \u001b[33mHTMLElement\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 26 | \u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 28 | \u001b[39mserviceWorker\u001b[33m.\u001b[39munregister()\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 30 | \u001b[39m    \u001b[90m// The URL constructor is available in all browsers that support SW.\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m    \u001b[36mconst\u001b[39m publicUrl \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mURL\u001b[39m(\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 | \u001b[39m      (process as { env\u001b[33m:\u001b[39m { [key\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m string } })\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mPUBLIC_URL\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m      window\u001b[33m.\u001b[39mlocation\u001b[33m.\u001b[39mhref\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m    \u001b[36mif\u001b[39m (publicUrl\u001b[33m.\u001b[39morigin \u001b[33m!==\u001b[39m window\u001b[33m.\u001b[39mlocation\u001b[33m.\u001b[39morigin) {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 42 | \u001b[39m    }\u001b[0m\n\u001b[0m \u001b[90m 43 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 44 | \u001b[39m    public render()\u001b[33m:\u001b[39m any {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 46 | \u001b[39m        \u001b[36mconst\u001b[39m { advertisers\u001b[33m,\u001b[39m auth\u001b[33m,\u001b[39m classes\u001b[33m,\u001b[39m match } \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 47 | \u001b[39m        \u001b[36mconst\u001b[39m activeAdvertiser \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfind(advertisers\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m\"active\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[36mclass\u001b[39m \u001b[33mAuthentication\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mComponent\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m,\u001b[39m any\u001b[33m>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m  public state \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m    tabValue\u001b[33m:\u001b[39m \u001b[32m\"SignIn\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[0m","Parsing error: Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `xs`, consider using `Xs`, in enum `Breakpoint`.\n\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36menum\u001b[39m \u001b[33mBreakpoint\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 | \u001b[39m  xs \u001b[33m=\u001b[39m \u001b[32m\"576px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m  sm \u001b[33m=\u001b[39m \u001b[32m\"768px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  md \u001b[33m=\u001b[39m \u001b[32m\"992px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  lg \u001b[33m=\u001b[39m \u001b[32m\"1200px\"\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 21 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m    \u001b[36mconst\u001b[39m advertisers \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 | \u001b[39m        let advertisers \u001b[33m=\u001b[39m [] as any\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m        props\u001b[33m.\u001b[39madvertisers\u001b[33m.\u001b[39mforEach((advertiser) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 25 | \u001b[39m            advertisers\u001b[33m.\u001b[39mpush({\u001b[0m\n\u001b[0m \u001b[90m 26 | \u001b[39m                value\u001b[33m:\u001b[39m advertiser\u001b[33m.\u001b[39mid\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 44 | \u001b[39m    }\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 46 | \u001b[39m    public toggleMenu \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 47 | \u001b[39m        \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39msetState(prevState \u001b[33m=>\u001b[39m ({\u001b[0m\n\u001b[0m \u001b[90m 48 | \u001b[39m            menuOpen\u001b[33m:\u001b[39m \u001b[33m!\u001b[39mprevState\u001b[33m.\u001b[39mmenuOpen\u001b[0m\n\u001b[0m \u001b[90m 49 | \u001b[39m        }))\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m\u001b[36mclass\u001b[39m \u001b[33mSidebar\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mComponent\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m,\u001b[39m any\u001b[33m>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m  public render() {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m    \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mContainer\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFragment\u001b[39m\u001b[33m>\u001b[39m{renderNav(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops)}\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFragment\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 87 | \u001b[39m        state \u001b[33m=\u001b[39m capitalizeFirstLetter(campaign\u001b[33m.\u001b[39mstate)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 88 | \u001b[39m        let engagements \u001b[33m=\u001b[39m campaign\u001b[33m.\u001b[39mengagements\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 | \u001b[39m        let filteredEngagements \u001b[33m=\u001b[39m [] as any\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 90 | \u001b[39m        \u001b[36mif\u001b[39m (engagements) {\u001b[0m\n\u001b[0m \u001b[90m 91 | \u001b[39m            engagements\u001b[33m.\u001b[39mforEach((engagement) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 92 | \u001b[39m                \u001b[36mif\u001b[39m (moment(engagement\u001b[33m.\u001b[39mcreatedat) \u001b[33m>=\u001b[39m moment\u001b[33m.\u001b[39mutc(startDate) \u001b[33m&&\u001b[39m moment(engagement\u001b[33m.\u001b[39mcreatedat) \u001b[33m<=\u001b[39m moment\u001b[33m.\u001b[39mutc(endDate)) {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 45 | \u001b[39m          password\u001b[33m:\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate\u001b[33m.\u001b[39mpassword\u001b[0m\n\u001b[0m \u001b[90m 46 | \u001b[39m        })\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 | \u001b[39m      } as any)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 48 | \u001b[39m    let data \u001b[33m=\u001b[39m await resp\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 49 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 50 | \u001b[39m    \u001b[36mif\u001b[39m (data \u001b[33m===\u001b[39m \u001b[32m`Error in authentication Error: {\"error\":\"Invalid email or password\",\"statusCode\":400}`\u001b[39m) {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 33 | \u001b[39m        \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mvalidate \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mvalidate\u001b[33m.\u001b[39mbind(\u001b[36mthis\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m    }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 | \u001b[39m    public componentDidMount() {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m        \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39minitialize()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 | \u001b[39m    }\u001b[0m\n\u001b[0m \u001b[90m 38 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 16 | \u001b[39m        \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate \u001b[33m=\u001b[39m {}\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m    }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m    public componentDidMount() {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m        \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39minitialize()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    }\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m\u001b[0m","Parsing error: Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `xs`, consider using `Xs`, in enum `Breakpoint`.\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36menum\u001b[39m \u001b[33mBreakpoint\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m  xs \u001b[33m=\u001b[39m \u001b[32m\"576px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  sm \u001b[33m=\u001b[39m \u001b[32m\"768px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  md \u001b[33m=\u001b[39m \u001b[32m\"992px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m  lg \u001b[33m=\u001b[39m \u001b[32m\"1200px\"\u001b[39m\u001b[0m","Parsing error: Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `xs`, consider using `Xs`, in enum `Breakpoint`.\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36menum\u001b[39m \u001b[33mBreakpoint\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  xs \u001b[33m=\u001b[39m \u001b[32m\"576px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  sm \u001b[33m=\u001b[39m \u001b[32m\"768px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  md \u001b[33m=\u001b[39m \u001b[32m\"992px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  lg \u001b[33m=\u001b[39m \u001b[32m\"1200px\"\u001b[39m\u001b[0m","Parsing error: Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `xs`, consider using `Xs`, in enum `Breakpoint`.\n\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[36menum\u001b[39m \u001b[33mBreakpoint\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 | \u001b[39m  xs \u001b[33m=\u001b[39m \u001b[32m\"576px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m  sm \u001b[33m=\u001b[39m \u001b[32m\"768px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m  md \u001b[33m=\u001b[39m \u001b[32m\"992px\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m  lg \u001b[33m=\u001b[39m \u001b[32m\"1200px\"\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 70 | \u001b[39m            data\u001b[33m:\u001b[39m [impressions\u001b[33m,\u001b[39m clicks\u001b[33m,\u001b[39m landings]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 71 | \u001b[39m            color\u001b[33m:\u001b[39m colors[\u001b[35m0\u001b[39m]\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 72 | \u001b[39m        }] as any\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 73 | \u001b[39m    } as any\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 74 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 75 | \u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mexport\u001b[39m async \u001b[36mfunction\u001b[39m initializeData(context) {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m    let initializedData \u001b[33m=\u001b[39m {} as any\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m    initializedData\u001b[33m.\u001b[39muserId \u001b[33m=\u001b[39m getSearchParameters(context\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mlocation)\u001b[33m.\u001b[39muserId\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m    initializedData\u001b[33m.\u001b[39madvertiserId \u001b[33m=\u001b[39m getSearchParameters(context\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mlocation)\u001b[33m.\u001b[39madvertiserId\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m    initializedData\u001b[33m.\u001b[39mcampaignId \u001b[33m=\u001b[39m getSearchParameters(context\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mlocation)\u001b[33m.\u001b[39mcampaignId\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        users\u001b[33m:\u001b[39m [\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m          action\u001b[33m.\u001b[39mpayload as \u001b[33mIUserPayload\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m          \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39musers\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        ]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_SEGMENTS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        segments\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mISegmentPayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_SEGMENTS_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVESETS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        creativesets\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeSetPayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVESETS_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        creativesets\u001b[33m:\u001b[39m [\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m          action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeSetPayload\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m          \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39mcreativesets\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        ]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mUPDATE_CREATIVESETS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      \u001b[36mconst\u001b[39m creativesets \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfilter(state\u001b[33m.\u001b[39mcreativesets\u001b[33m,\u001b[39m (item) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[36mreturn\u001b[39m item\u001b[33m.\u001b[39mid \u001b[33m!==\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeSetPayload\u001b[39m)\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      creativesets\u001b[33m.\u001b[39munshift(action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeSetPayload\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGETALL_USER_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        users\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mIUserPayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGETALL_USER_FAILED\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mUPDATE_CREATIVES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      \u001b[36mconst\u001b[39m creatives \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfilter(state\u001b[33m.\u001b[39mcreatives\u001b[33m,\u001b[39m (item\u001b[33m,\u001b[39m index) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[36mreturn\u001b[39m item\u001b[33m.\u001b[39mid \u001b[33m!==\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativePayload\u001b[39m)\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      creatives\u001b[33m.\u001b[39munshift(action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativePayload\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mUPDATE_INVOICES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      \u001b[36mconst\u001b[39m invoices \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfilter(state\u001b[33m.\u001b[39minvoices\u001b[33m,\u001b[39m (item\u001b[33m,\u001b[39m index) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[36mreturn\u001b[39m item\u001b[33m.\u001b[39mid \u001b[33m!==\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mIInvoicePayload\u001b[39m)\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      invoices\u001b[33m.\u001b[39munshift(action\u001b[33m.\u001b[39mpayload as \u001b[33mIInvoicePayload\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        creatives\u001b[33m:\u001b[39m [\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m          action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativePayload\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m          \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39mcreatives\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        ]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_GEOCODES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        geocodes\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mIGeocodePayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_GEOCODES_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_INVOICES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        invoices\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mIInvoicePayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_INVOICES_FAILED\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 11 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m        accessToken\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m        email\u001b[33m:\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mISignInPayload\u001b[39m)\u001b[33m.\u001b[39memail\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m        emailVerified\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m        id\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m        role\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        creatives\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativePayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVES_FAILED\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 15 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m        accessToken\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m        email\u001b[33m:\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mISignUpPayload\u001b[39m)\u001b[33m.\u001b[39memail\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        emailVerified\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m        id\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m        role\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVETYPES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        creativeTypes\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeTypePayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVETYPES_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 15 | \u001b[39m  any\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m  \u001b[33m>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m  public wrapperRef\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m  constructor(props) {\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36msuper\u001b[39m(props)\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39masync \u001b[36mfunction\u001b[39m processAdSets(adSets\u001b[33m,\u001b[39m userId\u001b[33m,\u001b[39m advertiserId\u001b[33m,\u001b[39m accessToken\u001b[33m,\u001b[39m campaign) {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m    let createAdSetsInput \u001b[33m=\u001b[39m [] as any\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m    \u001b[36mif\u001b[39m (adSets) {\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m        \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m adSet of adSets) {\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m            let createAdSetInput \u001b[33m=\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_REPORTS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      \u001b[36mconst\u001b[39m reports \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfilter(state\u001b[33m.\u001b[39mreports\u001b[33m,\u001b[39m (report)\u001b[33m=>\u001b[39m{\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[36mconst\u001b[39m campaignId \u001b[33m=\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mIReportPayload\u001b[39m)\u001b[33m.\u001b[39mcampaignId\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        \u001b[36mreturn\u001b[39m campaignId \u001b[33m!==\u001b[39m report\u001b[33m.\u001b[39mcampaignId\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      reports\u001b[33m.\u001b[39munshift(action\u001b[33m.\u001b[39mpayload as \u001b[33mIReportPayload\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 19 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mDELETE_CREATIVEINSTANCES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m      \u001b[36mconst\u001b[39m creativeInstances \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfilter(state\u001b[33m.\u001b[39mcreativeInstances\u001b[33m,\u001b[39m (item) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 | \u001b[39m        \u001b[36mreturn\u001b[39m item\u001b[33m.\u001b[39mid \u001b[33m!==\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeInstancePayload\u001b[39m)\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m        creativeInstances\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVEINSTANCES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m        creativeInstances\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeInstancePayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CREATIVEINSTANCES_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m        creativeInstances\u001b[33m:\u001b[39m [\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m          action\u001b[33m.\u001b[39mpayload as \u001b[33mICreativeInstancePayload\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m          \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39mcreativeInstances\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m        ]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CONFIRMATIONTYPES_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        confirmationTypes\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mIConfirmationTypePayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CONFIRMATIONTYPES_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_ADVERTISERS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        advertisers\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mIAdvertiserPayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_ADVERTISERS_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        advertisers\u001b[33m:\u001b[39m [\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m          action\u001b[33m.\u001b[39mpayload as \u001b[33mIAdvertiserPayload\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m          \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39madvertisers\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        ]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m        \u001b[36mcase\u001b[39m \u001b[33mGET_CAMPAIGN_LIST_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m            \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m                campaignList\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mICampaignListPayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m            }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m        \u001b[36mcase\u001b[39m \u001b[33mGET_CAMPAIGN_LIST_FAILED\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m            \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mUPDATE_CAMPAIGNS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      \u001b[36mconst\u001b[39m campaigns \u001b[33m=\u001b[39m _\u001b[33m.\u001b[39mfilter(state\u001b[33m.\u001b[39mcampaigns\u001b[33m,\u001b[39m (item) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[36mreturn\u001b[39m item\u001b[33m.\u001b[39mid \u001b[33m!==\u001b[39m (action\u001b[33m.\u001b[39mpayload as \u001b[33mICampaignPayload\u001b[39m)\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      campaigns\u001b[33m.\u001b[39munshift(action\u001b[33m.\u001b[39mpayload as \u001b[33mICampaignPayload\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CAMPAIGNS_SUCCESSFUL\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        campaigns\u001b[33m:\u001b[39m action\u001b[33m.\u001b[39mpayload as \u001b[33mICampaignPayload\u001b[39m[]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[33mGET_CAMPAIGNS_FAILD\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 17 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        campaigns\u001b[33m:\u001b[39m [\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m          action\u001b[33m.\u001b[39mpayload as \u001b[33mICampaignPayload\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m          \u001b[33m...\u001b[39mstate\u001b[33m.\u001b[39mcampaigns\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        ]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mclass\u001b[39m \u001b[33mUserMenu\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mComponent\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m,\u001b[39m any\u001b[33m>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  public render() {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m    \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mS\u001b[39m\u001b[33m.\u001b[39m\u001b[33mMenu\u001b[39m open\u001b[33m=\u001b[39m{\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mmenuOpen}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mLink\u001b[39m style\u001b[33m=\u001b[39m{{ textDecoration\u001b[33m:\u001b[39m \u001b[32m\"none\"\u001b[39m\u001b[33m,\u001b[39m color\u001b[33m:\u001b[39m \u001b[32m\"inherit\"\u001b[39m }} to\u001b[33m=\u001b[39m{\u001b[32m`/user/main/settings`\u001b[39m}\u001b[33m>\u001b[39m\u001b[0m"]